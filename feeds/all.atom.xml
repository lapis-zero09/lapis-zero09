<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>題未定</title><link href="https://www.lapis-zero09.xyz/" rel="alternate"></link><link href="https://www.lapis-zero09.xyz/feeds/all.atom.xml" rel="self"></link><id>https://www.lapis-zero09.xyz/</id><updated>2016-12-24T22:00:00+09:00</updated><entry><title>進捗確認</title><link href="https://www.lapis-zero09.xyz/28th.html" rel="alternate"></link><published>2016-12-24T22:00:00+09:00</published><updated>2016-12-24T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-12-24:/28th.html</id><summary type="html">&lt;p&gt;hai&lt;/p&gt;</summary><content type="html">&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;この記事は&lt;a href="http://qiita.com/advent-calendar/2016/enough"&gt;いなふ進捗アドベントカレンダー&lt;/a&gt;の24日目の記事です．&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;皆さまクリスマス三連休いかがお過ごしでしょうか．&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/lapis_zero09/"&gt;lapis_zero09&lt;/a&gt;です．&lt;/p&gt;
&lt;p&gt;まずは，皆さまの多大な時間と限りある情報資源をこのような形で無駄遣いしてしまったことを心よりお詫び申し上げます．&lt;/p&gt;
&lt;p&gt;お酒を飲んだ勢いで交わした一言二言がこのように大勢の方を巻き込んでしまい，申し訳なく思っております．&lt;/p&gt;
&lt;p&gt;&lt;a href="http://qiita.com/advent-calendar/2016/enough"&gt;qiita&lt;/a&gt;に投稿してしまえば，技術系の話ではないので，飽きたタイミングで運営に削除されるのではないかという思いがありました．(kuzu)&lt;/p&gt;
&lt;p&gt;(投稿時間的に)ぱぷりかさんの&lt;a href="http://skyflower-pap.hatenablog.com/entry/2016/12/05/211430"&gt;記事&lt;/a&gt;から流れが代わり，壮大なプロジェクトになって参りました&lt;a href="http://qiita.com/advent-calendar/2016/enough"&gt;いなふ進捗アドベントカレンダー&lt;/a&gt;も今日で24日目となりました．&lt;/p&gt;
&lt;p&gt;22日目の&lt;a href="https://twitter.com/00FFFF_"&gt;@00FFFF_&lt;/a&gt;さんの&lt;a href="http://sokcn-pb.hatenablog.com/entry/2016/12/22/194730"&gt;記事&lt;/a&gt;が僕らの言いたいことを全て代弁してくれていたので僕からは多くは語りません．&lt;/p&gt;
&lt;p&gt;26歳アパレル勤務独身女性の話ですが，周りがどんどん結婚して子供も産まれて焦っているようですので，狙い目ですが年上女性はいかがですかいなふ君．&lt;/p&gt;
&lt;p&gt;大学生のうちにできる恋愛を楽しむのもいいかもですね．&lt;/p&gt;
&lt;p&gt;僕から言えるのはただ一つでこういう人もいるので気をつけてください．&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="ja"&gt;&lt;p lang="ja" dir="ltr"&gt;元カノから今彼とのツーショットが送られてくるクリスマス三連休&lt;/p&gt;&amp;mdash; しんさく (@lapis_zero09) &lt;a href="https://twitter.com/lapis_zero09/status/812332690049376257"&gt;2016年12月23日&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;それでは，明日はいなふ君の記事です．&lt;/p&gt;
&lt;p&gt;楽しみにしましょう．&lt;/p&gt;</content><category term="trash"></category></entry><entry><title>Opencvで雑ファッションチェック</title><link href="https://www.lapis-zero09.xyz/27th.html" rel="alternate"></link><published>2016-12-10T22:00:00+09:00</published><updated>2016-12-10T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-12-10:/27th.html</id><summary type="html">&lt;p&gt;Opencvで雑に合成して雑にファッションチェック．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;この記事は&lt;a href="http://qiita.com/advent-calendar/2016/enough"&gt;いなふ進捗アドベントカレンダー&lt;/a&gt;の10日目の記事です．&lt;/p&gt;
&lt;h2&gt;衣&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;生活とは基本的に、命をつなぎ活動することであり、また生きながらえるために行う様々な活動である。 人は生き続けるためには、少なくとも、何らかの栄養を取らなければならず、（一般に）身体に何かをまとうことで体温を保つ必要があり、また野の雨や風をしのげる場所で眠りをとることを必要とする。つまり食べること、着ること、住まうことである。日本では、そうした生活の基本を漢字で簡潔に表現しようとする時は「衣食住」（いしょくじゅう）などと表現する&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;"生活"．wikipedia．https://ja.wikipedia.org/wiki/%E7%94%9F%E6%B4%BB　より&lt;/p&gt;
&lt;p&gt;人間が生きて行く上で体温を保つために「衣服」が必要なことはみなさんご存知の通り．&lt;/p&gt;
&lt;p&gt;しかし，体温を保つことができれば身に纏うものはなんでもいいのかと聞かれればそうではない．&lt;/p&gt;
&lt;p&gt;現代で動物の皮や葉っぱを直に纏っている人間は彼女なんてできないし，異常者として扱われるかもしれない．&lt;/p&gt;
&lt;p&gt;ここで，女性が彼氏にしたい男性を選ぶとき，男性のどこをみるかについて考える．&lt;/p&gt;
&lt;p&gt;そう，顔である．&lt;/p&gt;
&lt;p&gt;これは事実である．&lt;/p&gt;
&lt;p&gt;ここでさらに疑問がうまれてくる．顔が良くない我々は為す術もなく淘汰されてしまうのだろうか．&lt;/p&gt;
&lt;p&gt;そうではないであろう．もし，顔が良くない人間が子孫を残すことができず息絶えて行くのなら我々は生まれていない(は？)．&lt;/p&gt;
&lt;p&gt;では，どんな男性が異性といい感じになっているのだろうか．&lt;/p&gt;
&lt;p&gt;私が事前に行った調査(要出典)では，「雰囲気イケメン」と呼ばれる男性も異性といい感じになっている確率が高いことがわかった．&lt;/p&gt;
&lt;p&gt;一般的に「雰囲気イケメン」は「髪型」と「服装」によって構成されていると言われている(要出典)．&lt;/p&gt;
&lt;p&gt;ここでは，「服装」について考えていきたい．&lt;/p&gt;
&lt;p&gt;※イケメンに関しても服装がダメだと異性といい感じになれないかもしれない&lt;/p&gt;
&lt;h2&gt;現代における服装&lt;/h2&gt;
&lt;p&gt;現代における「服装」はその人の人間性を表していると言っても過言ではないだろう(要出典)．&lt;/p&gt;
&lt;p&gt;「服装」と一概に言っても様々な種類・色，また着方がある．&lt;/p&gt;
&lt;p&gt;自分に合った服を選ぶには，まず店に行き，次に自分に色合い・形が合うもの選ぶ．&lt;/p&gt;
&lt;p&gt;そして，試着し本当に自分に合っているか確かめる必要がある．&lt;/p&gt;
&lt;p&gt;また，このとき友人などを連れて行き，第三者的視点から意見をもらうことも重要である．&lt;/p&gt;
&lt;p&gt;しかし，多忙な&lt;a href="https://twitter.com/made_up_123"&gt;いなふ&lt;/a&gt;君にとって上記プロセスを踏襲することは難しいかもしれない．&lt;/p&gt;
&lt;p&gt;そんなときどうすればいいだろうか．&lt;/p&gt;
&lt;p&gt;雑誌や&lt;a href="http://wear.jp/"&gt;WEAR&lt;/a&gt;などでサイズ感や着こなしを確かめることができる．&lt;/p&gt;
&lt;p&gt;しかし，それらでモデルとして写っている人は皆顔がいい．&lt;/p&gt;
&lt;p&gt;我々が今知りたいのは雰囲気イケメンになれる服装である．&lt;/p&gt;
&lt;p&gt;そこで，我々の持てる技術を駆使し，&lt;a href="https://twitter.com/made_up_123"&gt;いなふ&lt;/a&gt;君に合う服をサジェストしたい．&lt;/p&gt;
&lt;h2&gt;服が似合うか(ファッションチェック)&lt;/h2&gt;
&lt;h3&gt;OpenCV&lt;/h3&gt;
&lt;p&gt;服を着たモデルの画像からモデルの顔の位置を認識し，そこにその服を着せたい人間の顔を合成する．&lt;/p&gt;
&lt;p&gt;モデルの顔認識には&lt;a href="http://opencv.jp/"&gt;OpenCV&lt;/a&gt;を用いることで容易に行うことができる．&lt;/p&gt;
&lt;p&gt;例えば以下の画像はかの有名なレナ画像であるが，&lt;a href="http://opencv.jp/"&gt;OpenCV&lt;/a&gt;を用いて顔の範囲を特定し，その範囲内を圧縮することで容易にモザイク画像を作成することができる．&lt;/p&gt;
&lt;p&gt;&lt;img alt="レナ" src="./img/lena.jpeg"&gt;
&lt;img alt="レナ(モザイク加工)" src="./img/mosaic_lena.jpg"&gt;&lt;/p&gt;
&lt;p&gt;以下のPythonコードを用いて，雑合成を行う．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;

&lt;span class="n"&gt;IMAGE_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/path/to/model_image&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;FACE_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/path/to/face_image&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;imageIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IMAGE_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;cascade_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/path/to/OpenCV/haarcascades/haarcascade_frontalface_alt.xml&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;cascade&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CascadeClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cascade_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;gray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cvtColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imageIn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COLOR_BGR2GRAY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;face&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cascade&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detectMultiScale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scaleFactor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minNeighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;face&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;face&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;



&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;face&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;face&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;faceIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FACE_PATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cvtColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;faceIn&lt;/span&gt;&lt;span class="p"&gt;[:,:,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COLOR_GRAY2BGR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;255.0&lt;/span&gt;
        &lt;span class="n"&gt;faceIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;faceIn&lt;/span&gt;&lt;span class="p"&gt;[:,:,:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="c1"&gt;# 画像によって顔をぴったり合わせるためには値を変える必要がある&lt;/span&gt;
        &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imageIn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imageIn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

        &lt;span class="n"&gt;faceIn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;faceIn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
        &lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

        &lt;span class="n"&gt;imageIn&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;faceIn&lt;/span&gt;&lt;span class="p"&gt;[:,:]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;imageIn&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;out.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imageIn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;使ってみる&lt;/h3&gt;
&lt;p&gt;まず，雑透過顔画像を用意する．&lt;/p&gt;
&lt;p&gt;&lt;img alt="face" src="./img/itousan.png"&gt;&lt;/p&gt;
&lt;p&gt;次に，着せたい服を着ているモデルの画像を用意する．&lt;/p&gt;
&lt;p&gt;&lt;img alt="fashion" src="./img/fashion.jpg"&gt;&lt;/p&gt;
&lt;p&gt;合成する．&lt;/p&gt;
&lt;p&gt;&lt;img alt="out" src="./img/out.jpg"&gt;&lt;/p&gt;
&lt;p&gt;雑なのでこういうことがある．&lt;/p&gt;
&lt;p&gt;&lt;img alt="out2" src="./img/out2.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;p&gt;自分で合成したほうがはやくね？&lt;/p&gt;
&lt;p&gt;店に行って試着しろ&lt;/p&gt;
&lt;h2&gt;謝辞&lt;/h2&gt;
&lt;p&gt;ピ先輩におかれましては，今回の記事作成に関して貴重な資料を提供していただきまして，誠に感謝しております．&lt;/p&gt;
&lt;p&gt;以上．&lt;/p&gt;</content><category term="trash"></category></entry><entry><title>Article Templete</title><link href="https://www.lapis-zero09.xyz/26th.html" rel="alternate"></link><published>2016-10-25T22:00:00+09:00</published><updated>2016-10-25T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-10-25:/26th.html</id><summary type="html">&lt;p&gt;論文読みのフォーマット置き場．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;題名&lt;/h1&gt;
&lt;h2&gt;どんなもの？&lt;/h2&gt;
&lt;h2&gt;先行研究と比べるとどこがすごい？&lt;/h2&gt;
&lt;h2&gt;どうやって有効だと検証した？&lt;/h2&gt;
&lt;h2&gt;議論はある？&lt;/h2&gt;
&lt;h2&gt;次に読むべき論文は？&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.slideshare.net/Ochyai/1-ftma15"&gt;先端技術とメディア表現1 #FTMA15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://lafrenze.hatenablog.com/entry/2015/08/04/120205"&gt;高速で論文がバリバリ読める落合先生のフォーマットがいい感じだったのでメモ&lt;/a&gt;&lt;/p&gt;</content><category term="study"></category></entry><entry><title>cowrieを設置した</title><link href="https://www.lapis-zero09.xyz/25th.html" rel="alternate"></link><published>2016-08-15T22:00:00+09:00</published><updated>2016-08-15T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-08-15:/25th.html</id><summary type="html">&lt;p&gt;cowrieを設置した話&lt;/p&gt;</summary><content type="html">&lt;h1&gt;cowrie&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/micheloosterhof/cowrie"&gt;cowrie&lt;/a&gt;はSSH型Honeypotの一種．&lt;/p&gt;
&lt;p&gt;前々からHoneypot設置したいと思っていたができていなかった．&lt;/p&gt;
&lt;p&gt;セキュリティ・キャンプで&lt;a href="https://twitter.com/junk_coken"&gt;junk&lt;/a&gt;さんにいろいろ教えてもらって，設置する決意．&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/ntddk"&gt;ntddk&lt;/a&gt;さんにも相談に乗ってもらった．．&lt;/p&gt;
&lt;p&gt;cowrieがいいっていう&lt;a href="https://twitter.com/junk_coken"&gt;junk&lt;/a&gt;さんの話は&lt;a href="http://junk-coken.hatenablog.com/entry/2016/06/30/040151"&gt;ここ&lt;/a&gt;にもあるので割愛．&lt;/p&gt;
&lt;h2&gt;cowrieインストール&lt;/h2&gt;
&lt;h3&gt;cowrie用設定&lt;/h3&gt;
&lt;p&gt;自分がcowrieを設置している環境はdebian ver8.5．&lt;/p&gt;
&lt;p&gt;以下コマンドで必要なものをインストール．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt-get install git python-dev python-openssl openssh-server python-pyasn1 python-twisted
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cowrieが22番ポートを使うので普段自分がsshするポートを指定できる範囲で変える．&lt;/p&gt;
&lt;p&gt;sshd_configのバックアップを取った上で書き換える．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# vim /etc/ssh/sshd_config

Port 22
↓
Port {任意の番号}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;書式のテストをして，いい感じならsshd_configの再読み込み．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# sshd -t
# service sshd restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cowrie設置用のユーザを作成し，22番ポートをcowrie用に設定．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# adduser --disabled-password cowrie
# iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 22 -j REDIRECT --to-port 2222
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cowrieにユーザをスイッチ．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# su cowrie
$ cd
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;cowrieのインストール&lt;/h3&gt;
&lt;p&gt;cowrieをダウンロード，設定ファイルを作る．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/cowrie/cowrie.git
$ &lt;span class="nb"&gt;cd&lt;/span&gt; cowrie
$ cp cowrie.cfg.dist cowrie.cfg
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;設定ファイルをいじる(ここではホスト名だけを変えた)．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim cowrie.cfg

&lt;span class="nv"&gt;hostname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;任意のホスト名&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cowrieの設定ポートを直接22にしてauthbind使ってもいい．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt-get install authbind
# touch /etc/authbind/byport/22
# chown cowrie /etc/authbind/byport/22
# chmod 777 /etc/authbind/byport/22
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cowrie/data内にあるuserdb.txtいじれば，
攻撃者がログインできるユーザネームとパスワードのコンビを変えることができる．&lt;/p&gt;
&lt;h3&gt;cowrieの起動&lt;/h3&gt;
&lt;p&gt;下記コマンドで起動&amp;amp;起動できたか確認．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./start.sh

$ cat cowrie.pid &lt;span class="c1"&gt;#process&lt;/span&gt;
or
$ netstat -antp &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="m"&gt;2222&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;cowrieに接続してみる&lt;/h3&gt;
&lt;p&gt;cowrieにsshしてちゃんと動いているか確かめる．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh root@&lt;span class="o"&gt;{&lt;/span&gt;ipaddress&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;userdb.txtで指定したユーザネームとパスワードのコンビでログインできたらok．&lt;/p&gt;
&lt;h3&gt;cowrie側でlogの確認&lt;/h3&gt;
&lt;p&gt;自分のssh用に開けたポートでログインしたらlogを見る．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat ~/cawrie/log/cowrie.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;攻撃者のipとか見える．&lt;/p&gt;
&lt;p&gt;cowrieを止める時はstop.shとか&lt;/p&gt;
&lt;p&gt;以上cowrieのインストール．&lt;/p&gt;
&lt;h2&gt;kippo-graphのインストール&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://bruteforce.gr/kippo-graph"&gt;kippo-graph&lt;/a&gt;はkippoで取れた攻撃者情報をいい感じに可視化してくれるやつ．&lt;/p&gt;
&lt;p&gt;cowrieでも使えるっぽいので使っていく．&lt;/p&gt;
&lt;p&gt;cowrieで取れたデータをMySQLに保存して，phpで表示するというもの．&lt;/p&gt;
&lt;h3&gt;MySQLのインストール&lt;/h3&gt;
&lt;p&gt;MySQLをインストール．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt-get install mysql-server python-mysqldb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;インストール途中でMySQLのrootのパスワードを聞かれるのでいい感じに設定．&lt;/p&gt;
&lt;p&gt;MySQLにcowrie用のユーザを追加と権限を設定．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# mysql -u root -p #インストール途中に入力したrootパスワードを入力
 mysql &amp;gt; create user &amp;#39;cowrie&amp;#39;@&amp;#39;localhost&amp;#39; identified by &amp;#39;{cowrieのパスワード任意で}&amp;#39;;
 mysql &amp;gt; grant all on cowrie.* to &amp;#39;cowrie&amp;#39;@&amp;#39;localhost&amp;#39; identified by &amp;#39;{cowrieのパスワード}&amp;#39;;
 mysql &amp;gt; exit;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cowrieにスイッチして，データベースをいい感じにしていく．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# su cowrie
$ cd ~/cowrie/doc/sql/
$ mysql -u cowrie -p
 mysql &amp;gt; create database cowrie;
 mysql &amp;gt; use cowrie;
 mysql &amp;gt; source mysql.sql;
 mysql &amp;gt; show tables;
+-----------------+
| Tables_in_kippo |
+-----------------+
| auth            |
| clients         |
| downloads       |
| input           |
| sensors         |
| sessions        |
| ttylog          |
+-----------------+
7 rows in set (0.00 sec)

 mysql &amp;gt; exit;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cowrieのログの出力を今しがた作ったデータベースにガンガン入れていくように設定する．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim ~/cowrie/cowrie.cfg

~略~
&lt;span class="o"&gt;[&lt;/span&gt;database_mysql&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; localhost
&lt;span class="nv"&gt;database&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; cowrie
&lt;span class="nv"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; cowrie
&lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;cowrieのパスワード&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3306&lt;/span&gt;
~略~
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;kippo-graphのインストール&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt-get update &amp;amp;&amp;amp; apt-get install -y libapache2-mod-php5 php5-mysql php5-gd php5-curl
# /etc/init.d/apache2 restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最新版をダウンロードしてやる．
(2016-08-15現在 Ver. 1.5.1)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# cd /var/www
# wget http://bruteforce.gr/wp-content/uploads/kippo-graph-1.5.1.tar.gz
# openssl sha1 kippo-graph-1.5.1.tar.gz
# tar zxvf kippo-graph-1.5.1.tar.gz
# mv kippo-graph-1.5.1 kippo-graph
# cd kippo-graph
# chmod 777 generated-graphs
# cp config.php.dist config.php
# vim config.php

~略~
define(&amp;#39;DB_HOST&amp;#39;, &amp;#39;localhost&amp;#39;);
define(&amp;#39;DB_USER&amp;#39;, &amp;#39;cowrie&amp;#39;);
define(&amp;#39;DB_PASS&amp;#39;, &amp;#39;{cowrieのパスワード}&amp;#39;);
define(&amp;#39;DB_NAME&amp;#39;, &amp;#39;cowrie&amp;#39;);
define(&amp;#39;DB_PORT&amp;#39;, &amp;#39;3306&amp;#39;);
~略~
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ブラウザでhttp://{ipaddress}/kippo-graph/を見る．&lt;/p&gt;
&lt;p&gt;&lt;img alt="kippo-graph" src="./img/25th.png"&gt;&lt;/p&gt;
&lt;h2&gt;余談&lt;/h2&gt;
&lt;p&gt;kippo-graphにはKIPPO-PLAYLOGという機能があり，&lt;/p&gt;
&lt;p&gt;攻撃者がログインしてから，ログアウトするまでの実行コマンドを&lt;/p&gt;
&lt;p&gt;可視化してくれる機能がある．&lt;/p&gt;
&lt;p&gt;cowrieではバグで今んとこ(2016-08-15現在)使えないっぽい
&lt;a href="https://github.com/ikoniaris/kippo-graph/issues/44"&gt;https://github.com/ikoniaris/kippo-graph/issues/44&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;スクリプトを実行すれば見れる．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/cowrie/log
$ python ../../bin/playlog &lt;span class="o"&gt;{&lt;/span&gt;任意のlog&lt;span class="o"&gt;}&lt;/span&gt;.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;python2系で動いてるのでpython3に書き換えたいなア&lt;/p&gt;
&lt;p&gt;以上．&lt;/p&gt;</content><category term="secrity"></category><category term="study"></category></entry><entry><title>続・わかりやすいパターン認識 第2章</title><link href="https://www.lapis-zero09.xyz/24th.html" rel="alternate"></link><published>2016-07-16T22:00:00+09:00</published><updated>2016-07-16T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-07-16:/24th.html</id><summary type="html">&lt;p&gt;続・わかりやすいパターン認識 第2章まとめ&lt;/p&gt;</summary><content type="html">&lt;h1&gt;続・わかりやすいパターン認識&lt;/h1&gt;
&lt;h2&gt;第1章 ベイズ統計学 復習&lt;/h2&gt;
&lt;h3&gt;ベイズの定理&lt;/h3&gt;
&lt;p&gt;結果(X)から原因(S)を探るための式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P(X)・・・周辺確率&lt;/li&gt;
&lt;li&gt;P(X, S)・・・同時確率(複数の事象が組になって同時に生起する確率) P(X, S) = P(X|S)P(S)&lt;/li&gt;
&lt;li&gt;P(S|X)・・・条件付き確率(Xという条件下でSが発生する確率)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;後の例題のために・・・&lt;/p&gt;
&lt;p&gt;&lt;img alt="ベイズの定理" src="./img/24th-2.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
  P(X) &amp; = &amp; \sum_{S}P(X,S)\\
  P(X, S) &amp; = &amp; P(X|S)P(S)\\
\mbox{よって，}\\
  P(X) &amp; = &amp; \sum_{S}P(X|S)P(S)
\end{eqnarray*} --&gt;

&lt;h5&gt;離散型確率変数についてのベイズの定理&lt;/h5&gt;
&lt;p&gt;&lt;img alt="ベイズの定理" src="./img/24th-1.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
  P(S|X) &amp; = &amp; \frac{P(X, S)}{P(X)}\\
         &amp; = &amp; \frac{P(X|S)}{P(X)}P(S)\\
         &amp; = &amp; \frac{P(X|S)}{\sum_{S}P(S)P(X|S)}P(S)\\
\end{eqnarray*} --&gt;

&lt;h5&gt;連続型確率変数についてのベイズの定理&lt;/h5&gt;
&lt;p&gt;上式のsigmaをintegralに&lt;/p&gt;
&lt;h4&gt;例題&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;表面が白色のカードが4枚，黒色のカードが6枚ある．
各カードは&amp;quot;当たり&amp;quot;，もしくは，&amp;quot;外れ&amp;quot;であり，&amp;quot;当たり&amp;quot;のカードの裏面には，
「当」の文字が印刷され，&amp;quot;外れ&amp;quot;のカードの裏面には何も印刷されていない．
&amp;quot;当たり&amp;quot;は白色のカードで2枚，黒色のカードで1枚含まれている．
(1)これら10枚のカードから無作為に1枚取り出すとき，
そのカードが&amp;quot;当たり&amp;quot;である確率を求めよ．
(2)上記の取り出したカードを，表・裏とも見ずにそのままにしておく．
その後，表の色が白であることを知ったとき，このカードが&amp;quot;当たり&amp;quot;である確率を求めよ．
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;10枚のカードから一枚を無作為に取り出したとき，そのカードが"当たり"である確率はP(S=当)&lt;/p&gt;
&lt;p&gt;P(S=当) = 3/10&lt;/p&gt;
&lt;p&gt;表の色が白であることを知ったとき，このカードが"当たり"である確率は条件付き確率P(S=当|X=白)に変化する．&lt;/p&gt;
&lt;p&gt;ベイズの定理より，&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題1" src="./img/24th-ex1.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
  P(S = \mbox{当}|X = \mbox{白}) &amp; = &amp; \frac{P(X = \mbox{白}|S = \mbox{当})P(S = \mbox{当})}{\sum_{S = \{\mbox{当，外}\}}P(S)P(X = \mbox{白}|S)}\\
         &amp; = &amp; \frac{P(X = \mbox{白}|S = \mbox{当})P(S = \mbox{当})}{P(S = \mbox{当})P(X = \mbox{白}|S = \mbox{当}) + P(S = \mbox{外})P(X = \mbox{白}|S = \mbox{外})}\\
         &amp; = &amp; \frac{(2/3) (3/10)}{(3/10) (2/3) + (7/10) (2/7)}\\
         &amp; = &amp; 1/2
\end{eqnarray*} --&gt;

&lt;p&gt;このとき，ベイズの定理の右辺のP(S)は，色の&lt;strong&gt;観測を行う前&lt;/strong&gt;の"当たり"の確率であり，
左辺のP(S|X)は&lt;strong&gt;観測後&lt;/strong&gt;の"当たり"の確率．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P(S) -&amp;gt; 事前確率&lt;/li&gt;
&lt;li&gt;P(S|X) -&amp;gt; 事後確率&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ベイズの定理は観測結果Xを得ることによって，「&lt;strong&gt;事前確率が事後確率に変化する&lt;/strong&gt;」変換式と捉えることができる．&lt;/p&gt;
&lt;h2&gt;第2章 事前確率と事後確率&lt;/h2&gt;
&lt;h3&gt;例題[1]&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;箱の中に，外見上は区別がつかない3種類のコインw1，w2，w3が大量に混ざっている．
その含有率はπ1，π2，π3．
これら3種類のコインを投げて表が出る確率はそれぞれθ1，θ2，θ3．
この箱の中からコインを無造作に1枚取り出して投げたところ表が出たとする．
(1)この結果より，そのコインがw1，w2，w3である確率を求めよ．
(2)上記確率をπ1=0.1，π2=0.4，π3=0.5 かつ，θ1=0.8，θ2=0.6，θ3=0.3 の場合について計算せよ．
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;(1)&lt;/h4&gt;
&lt;p&gt;結果X(コインを投げた結果)から原因S(コインの種類)を求める．&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex2.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
X &amp; = &amp;
\begin{cases}
\mbox{お} &amp; \mbox{コインが表のとき}\\
\mbox{う} &amp;  \mbox{コインが裏のとき}
\end{cases}\\
S &amp; = &amp; w_i \ \  (i=1,2,3)
\end{eqnarray*} --&gt;

&lt;p&gt;このとき，ベイズの定理より，&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex3.png"&gt;&lt;/p&gt;
&lt;p&gt;ここで，P(X)は，&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex4.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
%  P(S = w_i|X) &amp; = &amp; \frac{P(X|S = w_i)}{P(X)}P(S = w_i) \ \  (i=1,2,3)\\
  P(X) &amp; = &amp; \sum_{i = 1}^{3}P(S = w_i)P(X|S = w_i) \ \  \mbox{(X = お，う)}\\
\end{eqnarray*} --&gt;

&lt;p&gt;コインwがわかっているとき，そのコインを投げて表(X=お)の出る確率は与えられており，&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex5.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
  P(X = \mbox{お}|S = w_i) &amp; = &amp; \theta _i \ \  (i=1,2,3)\\
  P(X = \mbox{う}|S = w_i) &amp; = &amp; 1 - \theta _i \ \  (i=1,2,3)\\
\end{eqnarray*} --&gt;

&lt;p&gt;また，コインwの含有率について，&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex6.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
  P(S = w_i) &amp; = &amp; \pi _i \ \  (i=1,2,3)
\end{eqnarray*} --&gt;

&lt;p&gt;これがコインを投げる前に得られている確率で，事前確率に相当．&lt;/p&gt;
&lt;p&gt;以上より，&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex7.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
  P(X = \mbox{お}) &amp; = &amp; \sum_{i = 1}^{3}P(S = w_i)P(X = \mbox{お}|S = w_i)\\
                  &amp; = &amp; \sum_{i = 1}^{3} \pi _i \theta _i
\end{eqnarray*} --&gt;

&lt;p&gt;これをベイズの定理の式に代入して，&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex8.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
  P(S = w_i|X = \mbox{お}) &amp; = &amp; \frac{P(X = \mbox{お}|S = w_i)}{P(X = \mbox{お})}P(S = w_i)\\
  &amp; = &amp; \frac{\pi _i \theta _i}{\sum_{j = 1}^{3} \pi _j \theta _j} \ \  (i=1,2,3)\\
\end{eqnarray*} --&gt;

&lt;h4&gt;(2)&lt;/h4&gt;
&lt;p&gt;与えられたそれぞれの値より，&lt;/p&gt;
&lt;p&gt;P(X=お) = 0.1x0.8 + 0.4x0.6 + 0.5x0.3 = 0.47&lt;/p&gt;
&lt;p&gt;よって，&lt;/p&gt;
&lt;p&gt;P(S = w1|X = お) = (0.1x0.8)/0.47 = 0.170&lt;/p&gt;
&lt;p&gt;P(S = w2|X = お) = (0.4x0.6)/0.47 = 0.511&lt;/p&gt;
&lt;p&gt;P(S = w3|X = お) = (0.5x0.3)/0.47 = 0.319&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align="center"&gt;w1&lt;/th&gt;
&lt;th align="center"&gt;w2&lt;/th&gt;
&lt;th align="center"&gt;w3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;事前確率P(S=wi)&lt;/td&gt;
&lt;td align="center"&gt;0.100&lt;/td&gt;
&lt;td align="center"&gt;0.400&lt;/td&gt;
&lt;td align="center"&gt;0.500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;事後確率P(S=wi&amp;#124;X=お)&lt;/td&gt;
&lt;td align="center"&gt;0.170&lt;/td&gt;
&lt;td align="center"&gt;0.511&lt;/td&gt;
&lt;td align="center"&gt;0.319&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;例題[2]&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;箱の中に，外見上は区別がつかない3種類のコインw1，w2，w3が大量に混ざっている．
その含有率はπ1，π2，π3．
これら3種類のコインを投げて表が出る確率はそれぞれθ1，θ2，θ3．
この箱の中からコインを無造作に1枚取り出し，そのコインをn(n&amp;gt;2)回投げたところ，観測結果x1x2・・・xt・・・xnが得られた．
このとき，r(0 =&amp;lt; r =&amp;lt; n)回が表だった．
この結果より，そのコインがw1，w2，w3である確率を求めよ．
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;コインをn回投げたときの観測結果を以下のように表す．&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex9.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
  x^{(n)} &amp; = &amp; x_1x_2\cdots x_t\cdots x_n\\
  x_t &amp; \in &amp; \{\mbox{お，う}\} \ \  (t = 1,2,\cdots, n)
\end{eqnarray*} --&gt;

&lt;p&gt;取り出したコインwについて観測結果xが得られる確率は各試行の独立性により，&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex10.png"&gt;&lt;/p&gt;
&lt;!--
\begin{eqnarray*}
  P(X = x^{(n)}|S = w_i) &amp; = &amp; P(X=x_1|S=w_i)P(X=x_2|S=w_i)\cdots  P(X=x_n|S=w_i)\\
  &amp; = &amp; {\theta _i}^{r}{(1 - \theta _i)}^{n-r}\\
\mbox{よって，}\\
  P(x^{(n)}) &amp; = &amp; \sum_{i = 1}^{3}P(S = w_i)P(X = x^{(n)}|S = w_i)\\
                  &amp; = &amp; \sum_{i = 1}^{3} \pi _i {\theta _i}^{r}{(1 - \theta _i)}^{n-r}\\
\mbox{ベイズの定理より，}\\
  P(S = w_i|X = x^{(n)}) &amp; = &amp; \frac{P(X = x^{(n)}|S = w_i)}{P(X = x^{(n)})}P(S = w_i)\\
  &amp; = &amp; \frac{\pi _i {\theta _i}^{r}{(1 - \theta _i)}^{n-r}}{\sum_{j = 1}^{3} \pi _j {\theta _j}^{r}{(1 - \theta _j)}^{n-r}
} \ \  (i=1,2,3)\\
\end{eqnarray*} --&gt;

&lt;h3&gt;ベイズ更新&lt;/h3&gt;
&lt;p&gt;上例題[2]ではコインをn回投げたときの事後確率を直接求めた．&lt;/p&gt;
&lt;p&gt;ここでは，ベイズの更新を用いて，逐次的に求めることを考える．&lt;/p&gt;
&lt;p&gt;コインを一回投げ，続けて同じコインをもう一度投げる．&lt;/p&gt;
&lt;p&gt;コインを一回投げたとき，ベイズの定理より，&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex11.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
  P(S = w_i|X = x_1) &amp; = &amp; \frac{P(X = x_1|S = w_i)}{P(X = x_1)}P(S = w_i)\\
  &amp; = &amp; \frac{P(X = x_1|S = w_i)P(S = w_i)}{\sum_{j = 1}^{3} P(S = w_i)P(X = x_1|S = w_i)} \ \  (i=1,2,3)
\end{eqnarray*} --&gt;

&lt;p&gt;同様に2回投げた後での事後確率は，&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex12.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray}
  P(S = w_i|X = x_1x_2) &amp; = &amp; \frac{P(X = x_1x_2|S = w_i)}{P(X = x_1x_2)}P(S = w_i) \nonumber \\
  &amp; = &amp; \frac{P(X = x_1x_2|S = w_i)P(S = w_i)}{\sum_{j = 1}^{3} P(S = w_j)P(X = x_1x_2|S = w_j)} \nonumber \\
\\
\mbox{各試行の独立性より，}\nonumber\\
  P(X = x_1x_2|S = w_i) &amp; = &amp; P(X = x_1|S = w_i)P(X = x_2|S = w_i) \nonumber \\
\\
\mbox{コインを一回投げたときのベイズの定理から，}\nonumber \\
  P(S = w_i|X = x_1) &amp; = &amp; \frac{P(X = x_1|S = w_i)}{P(X = x_1)}P(S = w_i) \nonumber \\
  P(S = w_i|X = x_1)P(X = x_1) &amp; = &amp; P(X = x_1|S = w_i)P(S = w_i)\\
\mbox{(2)を(1)に代入}\nonumber \\
(1) &amp; = &amp; \frac{P(X = x_1|S = w_i)P(X = x_2|S = w_i)P(S = w_i)}{\sum_{j = 1}^{3} P(S = w_j)P(X = x_1|S = w_j)P(X = x_2|S = w_j)} \nonumber\\
\\
\mbox{(3)を(4)に代入}\nonumber \\
(4) &amp; = &amp; \frac{P(X = x_1)P(S = w_i|X = x_1)P(X = x_2|S = w_i)}{P(X = x_1)\sum_{j = 1}^{3} P(S = w_j|X = x_1)P(X = x_2|S = w_j)} \nonumber \\
    &amp; = &amp; \frac{P(X = x_2|S = w_i)P(S = w_i|X = x_1)}{\sum_{j = 1}^{3} P(S = w_j|X = x_1)P(X = x_2|S = w_j)} \nonumber
\end{eqnarray} --&gt;

&lt;p&gt;この式は一回目のコインを投げた観測結果P(S=wi|X=x1)を利用して，事後確率P(S=Wi|X=x1x2)を求める形になっている．&lt;/p&gt;
&lt;p&gt;同様に，n回投げたとき，&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex13.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
  P(S = w_i|X = x^{(n)}) &amp; = &amp; \frac{P(X = x^{(n)}|S = w_i)}{P(X = x^{(n)})}P(S = w_i)\\
  &amp; = &amp; \frac{P(X = x^{(n)}|S = w_i)P(S = w_i)}{\sum_{j = 1}^{3} P(S = w_j)P(X = x^{(n)}|S = w_j)}\\
\\
\mbox{各試行の独立性より，}\\
  P(X = x^{(n)}|S = w_i) &amp; = &amp; P(X = x_n|S = w_i)P(X = x^{(n-1)}|S = w_i)\\
\\
\mbox{コインを(n-1)回投げたときのベイズの定理から，}\\
  P(S = w_i|X = x^{(n-1)}) &amp; = &amp; \frac{P(X = x^{(n-1)}|S = w_i)}{P(X = x^{(n-1)})}P(S = w_i)\\
  P(S = w_i|X = x^{(n-1)})P(X = x^{(n-1)}) &amp; = &amp; P(X = x^{(n-1)}|S = w_i)P(S = w_i)\\
\mbox{よって，}\\
 P(S = w_i|X = x^{(n)}) &amp; = &amp; \frac{P(x^{(n-1)})P(w_i|x^{(n-1)})P(x_n|w_i)}{P(x^{(n-1)})\sum_{j = 1}^{3} P(w_j|x^{(n-1)})P(x_n|w_j)}\\
    &amp; = &amp; \frac{P(X = x_n|S = w_i)P(S = w_i|X = x^{(n-1)})}{\sum_{j = 1}^{3} P(S = w_j|X = x^{(n-1)})P(X = x_n|S = w_j)}
\end{eqnarray*} --&gt;

&lt;p&gt;これにより，一般化ができ，コインをn回投げたときの事後確率P(S=wi|X=x(n))は，それまでに投げた(n-1)回のコインの観測結果に基づく事後確率P(S=wi|X=x(n-1))を事前確率としてみなし，ベイズの定理を適応すれば良いことがわかる．&lt;/p&gt;
&lt;h3&gt;Bern&lt;/h3&gt;
&lt;p&gt;上記のように，コインを何度も投げるなどといった同一条件で同じ試行を繰り返すとき，各回の試行は独立であり，他の試行に影響を与えない．&lt;/p&gt;
&lt;p&gt;このような試行をベルヌーイ試行という．
一回の試行である事象が生起する確率がθであるとき，その試行をn回繰り返して事象がr回生起する確率Pn(r;θ)は，&lt;/p&gt;
&lt;p&gt;&lt;img alt="例題2" src="./img/24th-ex14.png"&gt;&lt;/p&gt;
&lt;!-- \begin{eqnarray*}
  P_n(r;\theta) &amp; = &amp; _nC_r\theta ^r(1 - \theta)^{n-r}
\end{eqnarray*} --&gt;

&lt;p&gt;この式で表されるrの分布は二項分布という．&lt;/p&gt;
&lt;p&gt;またn=1のとき，r=0，r=1となる確率がそれぞれθ，(1-θ)の離散型確率分布が得られる．これを特にベルヌーイ分布といい，Bern(r;θ)で示す．&lt;/p&gt;</content><category term="ML"></category><category term="study"></category></entry><entry><title>NginxをHTTP/2対応にした話2</title><link href="https://www.lapis-zero09.xyz/23th.html" rel="alternate"></link><published>2016-07-09T22:00:00+09:00</published><updated>2016-07-09T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-07-09:/23th.html</id><summary type="html">&lt;p&gt;NginxをHTTP/2対応にした時のHowto．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Nginx&lt;/h1&gt;
&lt;h2&gt;Nginx&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.lapis-zero09.xyz/forth.html"&gt;ここ&lt;/a&gt;の方法でHTTP/2に対応させると&lt;br&gt;
Firefox 47系ではうまく表示されないという不具合が生じた．  &lt;/p&gt;
&lt;p&gt;Firefoxをメインに使ってるので直す．  &lt;/p&gt;
&lt;p&gt;Nginxの設定でCipherリストの部分が問題っぽかったので以下のように変更．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nt"&gt;ssl_ciphers&lt;/span&gt;  &lt;span class="nt"&gt;ECDHE&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;AESGCM&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;DHE&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;AESGCM&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;HIGH&lt;/span&gt;&lt;span class="o"&gt;:!&lt;/span&gt;&lt;span class="nt"&gt;aNULL&lt;/span&gt;&lt;span class="o"&gt;:!&lt;/span&gt;&lt;span class="nt"&gt;MD5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;ssl_ciphers&lt;/span&gt;  &lt;span class="nt"&gt;AESGCM&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;HIGH&lt;/span&gt;&lt;span class="o"&gt;:!&lt;/span&gt;&lt;span class="nt"&gt;aNULL&lt;/span&gt;&lt;span class="o"&gt;:!&lt;/span&gt;&lt;span class="nt"&gt;MD5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これで一応はうまく動く．  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/"&gt;Mozilla SSL Configuration Generator&lt;/a&gt;で確認すると，
Cipherリストでは以下が推奨されているっぽい．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;ssl_ciphers&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これに書き換える．  &lt;/p&gt;
&lt;h2&gt;OCSP Stapling&lt;/h2&gt;
&lt;p&gt;ついでにOCSP Staplingに対応させる．  &lt;/p&gt;
&lt;p&gt;現在インストールしてある証明書からルート証明がどこかを確認．   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo openssl s_client -connect www.lapis-zero09.xyz:443 -tls1 -status -reconnect &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &amp;lt; /dev/null &lt;span class="p"&gt;|&lt;/span&gt; grep issuer
&lt;span class="nv"&gt;issuer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/C&lt;span class="o"&gt;=&lt;/span&gt;US/O&lt;span class="o"&gt;=&lt;/span&gt;Let&lt;span class="s1"&gt;&amp;#39;s Encrypt/CN=Let&amp;#39;&lt;/span&gt;s Encrypt Authority X3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ルート証明書がない場合はダウンロード&lt;br&gt;
lets encryptでインストールした証明書では/etc/letsencrypt/live/{FQDN}以下にchain.pemがあるので活用&lt;br&gt;
Nginxの設定ファイルに以下を記述．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssl_stapling on;
ssl_stapling_verify on;
ssl_trusted_certificate /etc/letsencrypt/live/{FQDN}/chain.pem;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下のコマンドでOCSPに対応したかを確認．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; QUIT &lt;span class="p"&gt;|&lt;/span&gt; openssl s_client -connect www.lapis-zero09.xyz:443 -status &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt; /dev/null &lt;span class="p"&gt;|&lt;/span&gt; grep -A &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;OCSP response:&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -B &lt;span class="m"&gt;17&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Next Update&amp;#39;&lt;/span&gt;
OCSP response:
&lt;span class="o"&gt;======================================&lt;/span&gt;
OCSP Response Data:
    OCSP Response Status: successful &lt;span class="o"&gt;(&lt;/span&gt;0x0&lt;span class="o"&gt;)&lt;/span&gt;
    Response Type: Basic OCSP Response
    Version: &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0x0&lt;span class="o"&gt;)&lt;/span&gt;
    Responder Id: &lt;span class="nv"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; US, &lt;span class="nv"&gt;O&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Let&lt;span class="s1"&gt;&amp;#39;s Encrypt, CN = Let&amp;#39;&lt;/span&gt;s Encrypt Authority X3
    Produced At: Jul  &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;:05:00 &lt;span class="m"&gt;2016&lt;/span&gt; GMT
 ~~省略~~
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;OCSP Response Statusがsuccessfulとなっていれば対応完了&lt;br&gt;
できていなければエラーログ確認&lt;br&gt;
&lt;a href="https://www.ssllabs.com/ssltest/index.html"&gt;SSLLab&lt;/a&gt;のテストもやってみる．&lt;br&gt;
(A+が出る(2016-07-09))&lt;/p&gt;
&lt;p&gt;以上．&lt;/p&gt;</content><category term="さくらVPS"></category><category term="Nginx"></category><category term="http2"></category><category term="tls"></category><category term="Let'sEncrypt"></category></entry><entry><title>さくらVPSに最新Nginxをインストール</title><link href="https://www.lapis-zero09.xyz/22th.html" rel="alternate"></link><published>2016-07-08T22:00:00+09:00</published><updated>2016-07-08T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-07-08:/22th.html</id><summary type="html">&lt;p&gt;さくらVPSに最新のNginxをインストールした時のHowto．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Nginx&lt;/h1&gt;
&lt;h2&gt;openssl&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.lapis-zero09.xyz/second.html"&gt;こちら&lt;/a&gt;でNginxをインストールする場合，&lt;br&gt;
openssl1.0.2に脆弱性(&lt;a href="https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-2107"&gt;CVE-2016-2107&lt;/a&gt;, &lt;a href="https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-2105"&gt;CVE-2016-2105&lt;/a&gt;, &lt;a href="https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-2106"&gt;CVE-2016-2106&lt;/a&gt;, &lt;a href="https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-2109"&gt;CVE-2016-2109&lt;/a&gt;, &lt;a href="https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-2176"&gt;CVE-2016-2176&lt;/a&gt;)が判明し，
opensslのversionをあげることが推奨される．  &lt;/p&gt;
&lt;p&gt;ここではyumを用いて最新Nginxをインストールする&lt;/p&gt;
&lt;h2&gt;Nginxのビルド&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ yum info nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でインストールされるNginxのversionが低い場合，&lt;br&gt;
以下のコマンドでNginxのリポジトリを追加してやる．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;nginx.repoが/etc/yum.repos.d/配下につくられる.  &lt;/p&gt;
&lt;p&gt;その内容は以下  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# nginx.repo

[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centos/6/$basearch/
gpgcheck=0
enabled=0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ここでenabledを以下のように変更する．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#enabled=0

enabled=1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ここでyum infoするとversionが最新のものになってるはず．  &lt;/p&gt;
&lt;p&gt;そして，Nginxをインストール&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum -y install nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nginxの設定はここ(https://www.lapis-zero09.xyz/forth.html)  &lt;/p&gt;
&lt;p&gt;ちなみにNginxの設定ファイルは/etc/nginx以下
※上記ではnginx.conf本体をいじっているがconf.dの中のconfファイルをいじるのもあり&lt;/p&gt;</content><category term="さくらVPS"></category><category term="Nginx"></category><category term="openssl"></category></entry><entry><title>railsの認証</title><link href="https://www.lapis-zero09.xyz/21th.html" rel="alternate"></link><published>2016-06-18T22:00:00+09:00</published><updated>2016-06-18T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-06-18:/21th.html</id><summary type="html">&lt;p&gt;実習でbasic認証かけろと言われた時にしたこと．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;rails&lt;/h1&gt;
&lt;p&gt;railsを使ってないチームはhtpasswdでパスワードファイル作って，.htaccessでやってた．&lt;/p&gt;
&lt;p&gt;railsを使ってたので，authenticate_or_request_with_http_basicを使って終わり．&lt;/p&gt;
&lt;p&gt;適当なcontrollerに以下を記述．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;Controller&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nx"&gt;Base&lt;/span&gt;

  &lt;span class="nx"&gt;before_filter&lt;/span&gt; :&lt;span class="kt"&gt;basic&lt;/span&gt;

  &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="err"&gt;（略）&lt;/span&gt;

  &lt;span class="kr"&gt;private&lt;/span&gt;
  &lt;span class="nx"&gt;def&lt;/span&gt; &lt;span class="nx"&gt;basic&lt;/span&gt;
    &lt;span class="nx"&gt;authenticate_or_request_with_http_basic&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pass&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;pass&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pass&amp;#39;&lt;/span&gt;
    &lt;span class="nx"&gt;end&lt;/span&gt;
  &lt;span class="nx"&gt;end&lt;/span&gt;
&lt;span class="nx"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でもこれだと一切暗号化してないので．．．な人は以下で簡単に暗号化
(以下もmd5なのでセキュアとは言えない)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;require &amp;#39;digest&amp;#39;

 class AdminController &amp;lt; ApplicationController
  before_filter :authenticate

  def authenticate
    authenticate_or_request_with_http_basic(&amp;#39;Administration&amp;#39;) do |username, password|
      md5_of_password = Digest::MD5.hexdigest(password)
      username == &amp;#39;admin&amp;#39; &amp;amp;&amp;amp; md5_of_password == &amp;#39;5ebe2294ecd0e0f08eab7690d2a6ee69&amp;#39;
    end
  end
end
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参照：&lt;a href="http://apidock.com/rails/ActionController/HttpAuthentication/Basic/ControllerMethods/authenticate_or_request_with_http_basic"&gt;http://apidock.com/rails/ActionController/HttpAuthentication/Basic/ControllerMethods/authenticate_or_request_with_http_basic&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以上．&lt;/p&gt;</content><category term="rails"></category><category term="ruby"></category><category term="basic"></category><category term="md5"></category><category term="security"></category></entry><entry><title>"Could not find ~ in any of the sources"</title><link href="https://www.lapis-zero09.xyz/20th.html" rel="alternate"></link><published>2016-06-15T22:00:00+09:00</published><updated>2016-06-15T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-06-15:/20th.html</id><summary type="html">&lt;p&gt;bundle installしても"Could not find　~ in any of the sources"とか怒られるときにやったこと&lt;/p&gt;</summary><content type="html">&lt;h1&gt;rails&lt;/h1&gt;
&lt;p&gt;bundle install何度してもダメ  &lt;/p&gt;
&lt;p&gt;rails sしてCould not find　~ in any of the sourcesって出たgemを一つずつversion合わせて，
インストールしても動くけど何より面倒．  &lt;/p&gt;
&lt;p&gt;まずは，問題のrailsプロジェクトのディレクトリに入って，&lt;br&gt;
Gemfile.lockを削除．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% rm Gemfile.lock&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;次に同ディレクトリ内の.bundle内のconfigをいじる．&lt;br&gt;
以下の行を削除．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;BUNDLE_DISABLE_SHARED_GEMS:‘1’
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;そしてbundlerをアップデートして，bundle installしたら直る．&lt;/p&gt;
&lt;p&gt;状況によっては，以下が必要？(要検証)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% pkill spring&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上．&lt;/p&gt;</content><category term="rails"></category><category term="bundler"></category><category term="ruby"></category></entry><entry><title>python3. + keras + TensorFlow install</title><link href="https://www.lapis-zero09.xyz/19th.html" rel="alternate"></link><published>2016-06-10T22:00:00+09:00</published><updated>2016-06-10T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-06-10:/19th.html</id><summary type="html">&lt;p&gt;MBPのPython3系環境にkerasとTensorFlowをビルドする&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Tensorflow + keras&lt;/h1&gt;
&lt;h2&gt;TensorFlow&lt;/h2&gt;
&lt;p&gt;anaconda3-4.0.0が入ってる状態で，以下で新作業環境を作る．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% conda create -n {env name} python=3.5 anaconda&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;作業用ディレクトリを作って，その中で今作った環境を&lt;br&gt;
pyenv localに設定する．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% pyenv local {env name}&lt;/span&gt;
&lt;span class="c"&gt;% conda update anaconda&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;pyenv versionsでうまくいってるか確認．&lt;/p&gt;
&lt;p&gt;以下を実行．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% sudo easy_install --upgrade six&lt;/span&gt;
&lt;span class="c"&gt;% pip install --upgrade pip&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下のPATHをzshrcなりに通す．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/mac/tensorflow-0.9.0rc0-py3-none-any.whl
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下でTensorFlowをpip install&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% sudo pip3 install --upgrade $TF_BINARY_URL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;3.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Anaconda&lt;/span&gt; &lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dec&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;4.2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Apple&lt;/span&gt; &lt;span class="n"&gt;Inc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt; &lt;span class="mi"&gt;5577&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;darwin&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tensorflow&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;tf&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello, TensorFlow!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;sess&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello, TensorFlow!&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="mi"&gt;42&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;成功．&lt;/p&gt;
&lt;h2&gt;keras&lt;/h2&gt;
&lt;p&gt;以下を実行．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% sudo pip3 install keras&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;なんとこれだけ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;3.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Anaconda&lt;/span&gt; &lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dec&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;4.2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Apple&lt;/span&gt; &lt;span class="n"&gt;Inc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt; &lt;span class="mi"&gt;5577&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;darwin&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;keras&lt;/span&gt;
&lt;span class="n"&gt;Using&lt;/span&gt; &lt;span class="n"&gt;Theano&lt;/span&gt; &lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;バックエンドにTensorFlowをしてやる&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% vim ~/.keras/keras.json&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;backend&amp;quot;: &amp;quot;theano&amp;quot;,
    &amp;quot;floatx&amp;quot;: &amp;quot;float32&amp;quot;,
    &amp;quot;image_dim_ordering&amp;quot;: &amp;quot;th&amp;quot;,
    &amp;quot;epsilon&amp;quot;: 1e-07
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これを&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;backend&amp;quot;: &amp;quot;tensorflow&amp;quot;,
    &amp;quot;floatx&amp;quot;: &amp;quot;float32&amp;quot;,
    &amp;quot;image_dim_ordering&amp;quot;: &amp;quot;th&amp;quot;,
    &amp;quot;epsilon&amp;quot;: 1e-07
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;こうするだけ  &lt;/p&gt;
&lt;p&gt;すると&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;3.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Anaconda&lt;/span&gt; &lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dec&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;4.2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Apple&lt;/span&gt; &lt;span class="n"&gt;Inc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt; &lt;span class="mi"&gt;5577&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;darwin&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;keras&lt;/span&gt;
&lt;span class="n"&gt;Using&lt;/span&gt; &lt;span class="n"&gt;TensorFlow&lt;/span&gt; &lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;なるほど．  &lt;/p&gt;</content><category term="ML"></category><category term="python"></category><category term="keras"></category><category term="TensorFlow"></category><category term="anaconda"></category></entry><entry><title>brew doctor, pyenv</title><link href="https://www.lapis-zero09.xyz/18th.html" rel="alternate"></link><published>2016-05-26T22:00:00+09:00</published><updated>2016-05-26T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-05-26:/18th.html</id><summary type="html">&lt;p&gt;brew doctorでpyenvのエラーが出た時の対処．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;brew doctor&lt;/h1&gt;
&lt;p&gt;pyenvを入れた後で久々に(おい)brew doctorをすると&lt;br&gt;
pyenvに関するWarningを吐いた．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# brew doctor

Warning: &amp;quot;config&amp;quot; scripts exist outside your system or Homebrew directories.
`./configure` scripts often look for *-config scripts to determine if
software packages are installed, and what additional flags to use when
compiling and linking.

Having additional scripts in your path can confuse software installed via
Homebrew if the config script overrides a system or Homebrew provided
script of the same name. We found the following &amp;quot;config&amp;quot; scripts:
    /Users/KonoShinsaku/.pyenv/shims/curl-config
    /Users/KonoShinsaku/.pyenv/shims/freetype-config
    /Users/KonoShinsaku/.pyenv/shims/libdynd-config
    /Users/KonoShinsaku/.pyenv/shims/libpng-config
    /Users/KonoShinsaku/.pyenv/shims/libpng16-config
    /Users/KonoShinsaku/.pyenv/shims/python-config
    /Users/KonoShinsaku/.pyenv/shims/python2-config
    /Users/KonoShinsaku/.pyenv/shims/python2.7-config
    /Users/KonoShinsaku/.pyenv/shims/python3-config
    /Users/KonoShinsaku/.pyenv/shims/python3.4-config
    /Users/KonoShinsaku/.pyenv/shims/python3.4m-config
    /Users/KonoShinsaku/.pyenv/shims/python3.5-config
    /Users/KonoShinsaku/.pyenv/shims/python3.5m-config
    /Users/KonoShinsaku/.pyenv/shims/xml2-config
    /Users/KonoShinsaku/.pyenv/shims/xslt-config
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;PATHが通ってるところにconfigっていうファイルがあると./configureスクリプトが&lt;br&gt;
自分の設定ファイルを勘違いしてしまうかも&lt;br&gt;
らしい  &lt;/p&gt;
&lt;p&gt;PATHから外すとpyenvが使えなくなるので&lt;br&gt;
brewを実行するときだけ該当のパスを外す．  &lt;/p&gt;
&lt;p&gt;zshrcに以下を記載．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# vim ~/.zshrc
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias brew=&amp;quot;env PATH=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;\&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;\&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user_name&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;\/\.phpenv\/shims:/} brew&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再読み込みをして，  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# source ~/.zshrc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;brew doctor&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# brew doctor
Your system is ready to brew.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# brew cleanup
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;を実行するとpyenvの中のanacondaに入れたライブラリが使えなくなる現象が起きていたが，&lt;br&gt;
上記を行ったら直ったのでそういうことだと思う．  &lt;/p&gt;
&lt;p&gt;以上．&lt;/p&gt;</content><category term="brew"></category><category term="pyenv"></category><category term="El_Capitan"></category><category term="zsh"></category></entry><entry><title>debianにVirtual Boxをインストール</title><link href="https://www.lapis-zero09.xyz/17th.html" rel="alternate"></link><published>2016-05-21T22:00:00+09:00</published><updated>2016-05-21T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-05-21:/17th.html</id><summary type="html">&lt;p&gt;kali linux rolling edにvirtualboxを入れるときに躓いたこと．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;kali linux rolling&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;公式&lt;/a&gt;からdebパッケージをダウンロードしてきてインストール  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dpkg -i {virtualbox...}.deb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;エラー吐いたら  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# sudo apt-get install -f
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;-&amp;gt;依存環境が解決されずインストールできない  &lt;/p&gt;
&lt;p&gt;-&amp;gt;aptでインストールしてみる  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.virtualbox.org/wiki/Linux_Downloads"&gt;https://www.virtualbox.org/wiki/Linux_Downloads&lt;/a&gt;
ここを参照して&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# vim /etc/apt/source.list
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下を追加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://download.virtualbox.org/virtualbox/debian&lt;/span&gt; &lt;span class="kp"&gt;xenial&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;環境によって'xenial' を'vivid', 'utopic', 'trusty', 'raring', 'quantal', 'precise', 'lucid', 'jessie', 'wheezy', 'squeeze'で入れ替える&lt;/p&gt;
&lt;p&gt;source.listに追加した に対してのkeyを追加する  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
# wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;fingerprintがちゃんと合ってるかapt-key fingerprintで確認  &lt;/p&gt;
&lt;p&gt;ちなみに2016/05/20時点で正しいのは以下  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;The key fingerprint for oracle_vbox_2016.asc is
B9F8 D658 297A F3EF C18D  5CDF A2F6 83C5 2980 AECF
Oracle Corporation (VirtualBox archive signing key) &amp;lt;info@virtualbox.org&amp;gt;
The key fingerprint for oracle_vbox.asc is
7B0F AB3A 13B9 0743 5925  D9C9 5442 2A4B 98AB 5139
Oracle Corporation (VirtualBox archive signing key) &amp;lt;info@virtualbox.org&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;そして以下を実行  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#apt-get update

# apt-get -y install virtualbox-5.0
パッケージリストを読み込んでいます... 完了
依存関係ツリーを作成しています
状態情報を読み取っています... 完了
インストールすることができないパッケージがありました。おそらく、あり得
ない状況を要求したか、(不安定版ディストリビューションを使用しているの
であれば) 必要なパッケージがまだ作成されていなかったり Incoming から移
動されていないことが考えられます。
以下の情報がこの問題を解決するために役立つかもしれません:

以下のパッケージには満たせない依存関係があります:
 virtualbox-5.0 : 依存: libpng12-0 (&amp;gt;= 1.2.13-4) しかし、インストールすることができません
                  依存: libssl1.0.0 (&amp;gt;= 1.0.0) しかし、インストールすることができません
                  依存: libvpx1 (&amp;gt;= 1.0.0) しかし、インストールすることができません
                  推奨: libsdl-ttf2.0-0 しかし、インストールされようとしていません
                  推奨: dkms しかし、インストールされようとしていません
                  推奨: linux-headers しかし、インストールすることができません
E: 問題を解決することができません。壊れた変更禁止パッケージがあります。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;やっぱりダメ&lt;br&gt;
しかし，  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#apt-get libpng12-0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;とかやってもないと言われるので,&lt;br&gt;
手動でパッケージをインストールする.  &lt;/p&gt;
&lt;p&gt;自分のアーキテクチャにあったdebファイルをダウンロードする(上のエラーで依存になっているもの)  &lt;/p&gt;
&lt;p&gt;筆者はamd64なので以下の3つ  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;libpng12-0 - &lt;a href="https://packages.debian.org/jessie/amd64/libpng12-0/download"&gt;https://packages.debian.org/jessie/amd64/libpng12-0/download&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;libvpx1 - &lt;a href="https://packages.debian.org/jessie/amd64/libvpx1-dbg/download"&gt;https://packages.debian.org/jessie/amd64/libvpx1-dbg/download&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;libssl1.0 - &lt;a href="https://packages.debian.org/jessie/amd64/libssl1.0.0/download"&gt;https://packages.debian.org/jessie/amd64/libssl1.0.0/download&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;それぞれパッケージをダウンロードしたらmd5, sha1, sha256でチェックサム確認  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# md5sum lib*
2f392ddcfd7de95cd794b8c5433e272b  libpng12-0_1.2.50-2+deb8u2_amd64.deb
57c3d82c10706d711f21c03f34d8249c  libssl1.0.0_1.0.1e-2+deb7u21_amd64.deb
a31e1de3bf7d71b02763c7eb194a445f  libvpx1_1.3.0-3_amd64.deb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;合致したら以下でインストール&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# dpkg -i libvpx1_1.3.0-3_amd64.deb libpng12-0_1.2.50-2+deb8u2_amd64.deb libssl1.0.0_1.0.1e-2+deb7u21_amd64.deb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;そしてvirtualboxインストール&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt-get -y install virtualbox-5.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;成功.&lt;/p&gt;
&lt;p&gt;以上.&lt;/p&gt;</content><category term="security"></category><category term="kali_linuxi"></category><category term="debian"></category><category term="virtualbox"></category><category term="apt"></category><category term="dpkg"></category></entry><entry><title>kali linux日本語環境</title><link href="https://www.lapis-zero09.xyz/16th.html" rel="alternate"></link><published>2016-05-20T22:00:00+09:00</published><updated>2016-05-20T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-05-20:/16th.html</id><summary type="html">&lt;p&gt;kali linux日本語入力環境がおかしくなった時の対処法．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;kali linux rolling&lt;/h1&gt;
&lt;p&gt;kali linux rolling editionで日本語入力環境がおかしくなった時にやったこと  &lt;/p&gt;
&lt;h2&gt;uim&lt;/h2&gt;
&lt;p&gt;kali linuxはdebianベースのOSで日本語入力環境を整えるパッケージとしては，&lt;br&gt;
uim, ibus, etc..あるが，他のサイトを参照してもuimを使ってるものしかない.  &lt;/p&gt;
&lt;p&gt;実際にibusを入れてみたが動かず...  &lt;/p&gt;
&lt;h2&gt;anthy&lt;/h2&gt;
&lt;p&gt;また，辞書もanthy, mozc, etc..あるが,
anthyしかうまく動かないっぽい.  &lt;/p&gt;
&lt;p&gt;mozcはguiを起動させようとしても起動せずそのまま落ちる状態．  &lt;/p&gt;
&lt;h2&gt;uim uim-anthy&lt;/h2&gt;
&lt;p&gt;そこで，uim, uim-anthyのパッケージを入れて日本語入力環境を整える．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt-get install uim uim-anthy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;が，uimとanthyを使ってもある設定をすると日本語入力ができなくなる．  &lt;/p&gt;
&lt;h3&gt;やると日本語入力ができなくなる行為&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;入力メソッド(uim-pref-gtk)で「予測変換」にチェックを入れる&lt;/li&gt;
&lt;li&gt;インプットメソッド設定(im-config)で明示的にシステム(「default」以外)を設定する&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上の設定をやってしまうと，日本語入力ができなくなる．  &lt;/p&gt;
&lt;h3&gt;この設定をやってしまった場合&lt;/h3&gt;
&lt;p&gt;チェックを外し(defaultを設定し)，再起動する．  &lt;/p&gt;
&lt;p&gt;それでも日本語入力ができない場合は以下を実行．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt-get purge uim uim-anthy
# apt autoremove
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これでもまだダメな場合は，  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# dpkg -l |grep &amp;quot;uim&amp;quot;
# dpkg -l |grep &amp;quot;anthy&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;それぞれで出てきたパッケージに対し，&lt;code&gt;apt-get purge&lt;/code&gt; を実行．&lt;br&gt;
めんどい人は以下で&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt-get purge `apt list | grep -G &amp;quot;uim\|anthy&amp;quot; | cut -d&amp;quot;/&amp;quot; -f1 | xargs echo`
# apt autoremove
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;そして，以下を実行．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt autoremove
# reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;そして，再インストール  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# apt-get install uim uim-anthy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;その他，設定を変えるたびにrebootするのが望ましい．  &lt;/p&gt;
&lt;p&gt;osインストールの時も日本語だとうまく表示されませんって出るし，&lt;br&gt;
日本語対応が完璧ではないのかな(そりゃそうか)  &lt;/p&gt;
&lt;p&gt;以上．&lt;/p&gt;</content><category term="security"></category><category term="El_Capitan"></category><category term="kali_linuxi"></category><category term="debian"></category><category term="uim"></category><category term="anthy"></category></entry><entry><title>kali linux インストール</title><link href="https://www.lapis-zero09.xyz/15th.html" rel="alternate"></link><published>2016-05-15T22:00:00+09:00</published><updated>2016-05-15T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-05-15:/15th.html</id><summary type="html">&lt;p&gt;kali linuxインストールから日本語化まで．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;kali linux&lt;/h1&gt;
&lt;p&gt;悪用しない&lt;br&gt;
大いなる力には〜〜ってやつ  &lt;/p&gt;
&lt;h2&gt;kali linux isoファイルのダウンロード&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;公式サイト - &lt;a href="https://www.kali.org/downloads/"&gt;https://www.kali.org/downloads/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ミラーリスト - &lt;a href="http://docs.kali.org/community/kali-linux-mirrors"&gt;http://docs.kali.org/community/kali-linux-mirrors&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;からkali linux 64bitをダウンロードする．&lt;br&gt;
ミラーサイトの場合は，amd64が64bit  &lt;/p&gt;
&lt;p&gt;sha1sumを確認してマッチするかちゃんと確かめる．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# openssl sha1sum {kaliのisoファイル}
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;USBブート&lt;/h2&gt;
&lt;p&gt;今回はUSBからブートする方法  &lt;/p&gt;
&lt;h3&gt;dmgに変換&lt;/h3&gt;
&lt;p&gt;kaliのisoイメージをdmgに変換．&lt;br&gt;
kaliのisoがあるディレクトリで  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# hdiutil convert -format UDRW -o kali.dmg kali-linux-2016.1-amd64.iso
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;USBのアンマウント&lt;/h3&gt;
&lt;p&gt;まず，USBのデバイスパスの確認&lt;br&gt;
USBをささない状態で以下を実行  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# diskutil
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;USBをさした状態で上記を実行  &lt;/p&gt;
&lt;p&gt;この時，新たに認識されたデバイスがUSBなので&lt;br&gt;
diskN の N　の部分をよく覚えておく．  &lt;/p&gt;
&lt;p&gt;以下で，USBをアンマウントする  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# diskutil unmountDisk /dev/diskN
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;USBに書き込む&lt;/h3&gt;
&lt;p&gt;以下でUSBに書き込み(結構時間かかる)  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# sudo dd if=kali.dmg of=/dev/diskN bs=1m
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ここでパス違えるともれなく&lt;strong&gt;死ぬ&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;書き込みが終わったら以下のコマンドでUSBを取り出す．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# diskutil eject /dev/diskN
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;起動&lt;/h2&gt;
&lt;p&gt;USBを挿してインストールするPCを起動．  &lt;/p&gt;
&lt;p&gt;Thinkpadでは起動メディアを選択できるのでF12キーを押しながら起動．  &lt;/p&gt;
&lt;p&gt;この時うまく認識されなかったらBIOSの起動メディア順序を変えてみる(やり方は省略)  &lt;/p&gt;
&lt;p&gt;それでもダメならUSB書き込みのプロセスをもう一度．  &lt;/p&gt;
&lt;p&gt;うまくいったら&lt;/p&gt;
&lt;h3&gt;kali 2.0 sanaの場合&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Graphicalinstall を選択してEnter&lt;/li&gt;
&lt;li&gt;言語の選択-&amp;gt;「Japanese - 日本語」&lt;/li&gt;
&lt;li&gt;国を選択-&amp;gt;「日本」&lt;/li&gt;
&lt;li&gt;キーボードを選択-&amp;gt;「英語」(自分の環境に合わせて)&lt;/li&gt;
&lt;li&gt;ネットワークの選択-&amp;gt;デフォルトでok&lt;/li&gt;
&lt;li&gt;ドメイン名-&amp;gt;「localhost」&lt;/li&gt;
&lt;li&gt;パスワード設定-&amp;gt;任意のパスワード&lt;/li&gt;
&lt;li&gt;ディスクのパーティショニング-&amp;gt;「ディスク全体」-&amp;gt;USBじゃないHDDを選択-&amp;gt;「すべての．．．」-&amp;gt;「パーティショニングの終了とディスクへの変更の書き込み」-&amp;gt;「はい」&lt;/li&gt;
&lt;li&gt;ネットワークミラー-&amp;gt;「はい」&lt;/li&gt;
&lt;li&gt;プロキシ-&amp;gt;デフォルトでok&lt;/li&gt;
&lt;li&gt;GRUBブートローダ-&amp;gt;「はい」&lt;/li&gt;
&lt;li&gt;デバイスの変換-&amp;gt;「/dev/sda」&lt;/li&gt;
&lt;li&gt;「続ける」を選択&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;-&amp;gt;勝手に再起動-&amp;gt;ユーザ:root，パスワードでログイン  &lt;/p&gt;
&lt;p&gt;ログインできたら成功  &lt;/p&gt;
&lt;h3&gt;kali rolling edition の場合&lt;/h3&gt;
&lt;p&gt;言語を日本語にしてインストールすると &lt;code&gt;apt-get update upgrade&lt;/code&gt; 後に環境が壊れるバグ(?)が起きたので初期言語を英語にしといて後で日本語に設定する．  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Graphicalinstall を選択してEnter&lt;/li&gt;
&lt;li&gt;言語の選択-&amp;gt;「English」(?)&lt;/li&gt;
&lt;li&gt;国を選択-&amp;gt;「日本」&lt;/li&gt;
&lt;li&gt;キーボードを選択-&amp;gt;「英語」(自分の環境に合わせて)&lt;/li&gt;
&lt;li&gt;ネットワークの選択-&amp;gt;デフォルトでok&lt;/li&gt;
&lt;li&gt;ドメイン名-&amp;gt;「localhost」&lt;/li&gt;
&lt;li&gt;パスワード設定-&amp;gt;任意のパスワード&lt;/li&gt;
&lt;li&gt;ディスクのパーティショニング-&amp;gt;「ディスク全体」-&amp;gt;USBじゃないHDDを選択-&amp;gt;「すべての．．．」-&amp;gt;「パーティショニングの終了とディスクへの変更の書き込み」-&amp;gt;「はい」&lt;/li&gt;
&lt;li&gt;ネットワークミラー-&amp;gt;「はい」&lt;/li&gt;
&lt;li&gt;プロキシ-&amp;gt;デフォルトでok&lt;/li&gt;
&lt;li&gt;GRUBブートローダ-&amp;gt;「はい」&lt;/li&gt;
&lt;li&gt;デバイスの変換-&amp;gt;「/dev/sda」&lt;/li&gt;
&lt;li&gt;「続ける」を選択&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;-&amp;gt;勝手に再起動-&amp;gt;ユーザ:root，パスワードでログイン  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ dpkg-reconfigure locales
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;スペースで &lt;code&gt;ja-JP.UTF-8 UTF-8&lt;/code&gt; を選択-&amp;gt;エンター&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ログインできて日本語になってれば成功  &lt;/p&gt;
&lt;h3&gt;こっからsanaもrollingも一緒&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://docs.kali.org/general-use/kali-linux-sources-list-repositories"&gt;http://docs.kali.org/general-use/kali-linux-sources-list-repositories&lt;/a&gt; に従って，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim /etc/apt/sources.list
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下を記載&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://http.kali.org/kali&lt;/span&gt; &lt;span class="kp"&gt;kali-rolling&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;span class="c"&gt;# For source package access, uncomment the following line&lt;/span&gt;
&lt;span class="k"&gt;deb-src&lt;/span&gt; &lt;span class="s"&gt;http://http.kali.org/kali&lt;/span&gt; &lt;span class="kp"&gt;kali-rolling&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下を実行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ apt-get update
$ apt-get dist-upgrade
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;upgradeの方がうまくできなかったら&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ apt-get dist-upgrade --fix-missing
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;途中で日本語表記が崩れますがすぐに直る  &lt;/p&gt;
&lt;p&gt;直らなければ．．．  &lt;/p&gt;
&lt;h2&gt;日本語入力環境&lt;/h2&gt;
&lt;p&gt;以下を実行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ apt-get install uim uim-anthy
$ reboot &lt;span class="c1"&gt;#再起動&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上．&lt;/p&gt;</content><category term="security"></category><category term="El_Capitan"></category><category term="kali_linux"></category></entry><entry><title>WEBセキュリティ</title><link href="https://www.lapis-zero09.xyz/14th.html" rel="alternate"></link><published>2016-05-11T22:00:00+09:00</published><updated>2016-05-11T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-05-11:/14th.html</id><summary type="html">&lt;p&gt;情報セキュリティ入門第5章まとめ．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;WEBセキュリティ&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://www.amazon.co.jp/%E6%83%85%E5%A0%B1%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E5%85%A5%E9%96%80-%E7%AC%AC3%E7%89%88-%EF%A8%9E%E5%AE%A4-%E8%8B%B1%E5%A4%AA%E9%83%8E/dp/4766421655/ref=pd_sim_14_3?ie=UTF8&amp;amp;dpID=51L1j2RYMNL&amp;amp;dpSrc=sims&amp;amp;preST=_AC_UL160_SR113%2C160_&amp;amp;refRID=1MW1F8KA1HKMPSYHV7FN"&gt;羽室 英太郎．情報セキュリティ入門．第3版，東京，慶應義塾大学出版会，2014，379p．&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;1.webサイトのセキュリティとは&lt;/h2&gt;
&lt;h3&gt;非武装地帯&lt;/h3&gt;
&lt;h4&gt;数年前まで&lt;/h4&gt;
&lt;p&gt;-&amp;gt;攻撃が内部まで侵入しないよう非武装地域(DMS:DeMilitarixed Zone)を設けていた&lt;br&gt;
  (ここに外部公開用のサーバなどを設置し，内部LANとファイアウォールによって隔離する)  &lt;/p&gt;
&lt;p&gt;といった物理的方式が一般的だった．  &lt;/p&gt;
&lt;p&gt;攻撃：サーバやOSを狙ったもの&lt;/p&gt;
&lt;h4&gt;現在&lt;/h4&gt;
&lt;p&gt;様々なサービスのポータルとなった今，個人情報などのデータベースとの密接な連携  &lt;/p&gt;
&lt;p&gt;-&amp;gt;webを経由するサービスを処理するwebアプリへの攻撃  &lt;/p&gt;
&lt;p&gt;--&amp;gt;webサイトへの脅威の中心&lt;/p&gt;
&lt;h3&gt;脅威への対策&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;入力データの確認&lt;/li&gt;
&lt;li&gt;アクセスコントロール&lt;/li&gt;
&lt;li&gt;セッション管理&lt;/li&gt;
&lt;li&gt;エラー処理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-&amp;gt;個々のwebサイト毎に行い，webアプリケーション全体で十分なチェックが行われていなければ，ファイアウォールすり抜けられる可能性  &lt;/p&gt;
&lt;p&gt;対策として&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;攻撃手法や脅威の理解&lt;/li&gt;
&lt;li&gt;WAF(webアプリケーション・ファイアウォール)の導入&lt;/li&gt;
&lt;li&gt;適切なセッション管理&lt;/li&gt;
&lt;li&gt;認証技術の高度化&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;体制の構築&lt;/h3&gt;
&lt;p&gt;脅威の直接の対象-&amp;gt;webアプリ&lt;br&gt;
クラッカーの狙い-&amp;gt;データベース  &lt;/p&gt;
&lt;p&gt;セキュリティ=技術的=企業の営利活動に比較して瑣末なのでは(?)&lt;/p&gt;
&lt;h3&gt;サイト全体のセキュリティ&lt;/h3&gt;
&lt;p&gt;情報セキュリティポリシーの策定&lt;br&gt;
それに伴って．．基づく体制の確保，対策推進  &lt;/p&gt;
&lt;p&gt;-&amp;gt;サイバー攻撃・ウイルス・DoS攻撃(意図的脅威)，自然災害(環境的脅威)，アウトソーシングなど事業形態の変化に伴う構造的な脅威(非意図的要因)を考慮  &lt;/p&gt;
&lt;h2&gt;2.webアプリケーションとは&lt;/h2&gt;
&lt;h3&gt;利用環境&lt;/h3&gt;
&lt;p&gt;端末側のOSの影響を受けない(クロスプラットフォーム)ブラウザとインターネット接続環境が必要&lt;/p&gt;
&lt;h3&gt;webアプリの高速化&lt;/h3&gt;
&lt;p&gt;WEB2.0 -&amp;gt; WEB3.0  &lt;/p&gt;
&lt;p&gt;セマンティック・ウェブ(Semantic Web:webページに有意性を持たせることによる効率化)  &lt;/p&gt;
&lt;p&gt;マッシュアップ(各種webサービスの融合)  &lt;/p&gt;
&lt;p&gt;-&amp;gt;webページを華麗に彩るだけでなく様々なアプリやクラウドサービスの提供の高度化  &lt;/p&gt;
&lt;p&gt;-&amp;gt;プログラミング技術などの複雑化  &lt;/p&gt;
&lt;p&gt;基本：webアプリの開発-&amp;gt;MVC(Model-View-Controller)フレームワーク  &lt;/p&gt;
&lt;p&gt;最近：Ajax(Asynchronous JavaScript + XML)やHTML5，DOM(Document Object Model)  &lt;/p&gt;
&lt;h3&gt;セッションとは&lt;/h3&gt;
&lt;p&gt;セッション：ユーザがリクエストした内容に対応するサーバがリプライを送る一連の流れ  &lt;/p&gt;
&lt;p&gt;e.g.  ~~~~~~~~~&lt;br&gt;
ユーザ：ネットショッピングにおいてログイン(id + pass)，注文，支払い手段，届け先-&amp;gt;リクエスト&lt;br&gt;
サーバ：リクエスト&lt;br&gt;
~~~~~~~~  &lt;/p&gt;
&lt;h3&gt;ウェブアプリが狙われるのは&lt;/h3&gt;
&lt;p&gt;セッションをユーザごとに区別するために番号を付して管理  &lt;/p&gt;
&lt;p&gt;-&amp;gt;セッション管理が定型的なら攻撃対象に&lt;/p&gt;
&lt;h2&gt;3.webに対する攻撃の進化&lt;/h2&gt;
&lt;h3&gt;攻撃対象・手法の進化&lt;/h3&gt;
&lt;p&gt;現在の攻撃手法
- 従来型のサーバに対する攻撃手法
  - セッションハイジャック，SQLiなどwebアプリの設定ミスや不具合を利用
- 会社のサーバを攻撃-&amp;gt;ターゲットのサーバに侵入
  - 難攻不落のサーバに侵入するよりは．．制作会社や保守管理用コンソールをウイルスに感染させ，ターゲットに侵入&lt;/p&gt;
&lt;p&gt;-&amp;gt;踏み台にしたりクロスサイトからツールを持ってきたり．．etc.&lt;br&gt;
--&amp;gt;一般ユーザに実行させるスクリプトを潜ませておいて，誘導されたユーザに攻撃させる&lt;br&gt;
---&amp;gt;ユーザのクッキーやアカウント情報を抜き取ることも可能  &lt;/p&gt;
&lt;h3&gt;検索エンジンの活用&lt;/h3&gt;
&lt;p&gt;大手検索エンジンを利用して，セキュリティ技術情報を収集したり，脆弱性を有するサイトを抽出する&lt;br&gt;
-&amp;gt;Googleハッキングなど&lt;br&gt;
--&amp;gt;見つけたサイトにマルウェアなどをばら撒き，サーバに侵入してバックドアを仕掛けたり，用意したマルウェアの本体を入れたり．&lt;br&gt;
ボットネットもこのような手法を用いてボット化したものが多い  &lt;/p&gt;
&lt;h2&gt;4.セッション管理とは&lt;/h2&gt;
&lt;p&gt;インターネット上でショッピングをしたり，購入時に必要な一連の画面遷移の流れ-&amp;gt;セッション&lt;br&gt;
管理する手法は，サーバとユーザのブラウザが相互に認証する手法でもある．  &lt;/p&gt;
&lt;p&gt;画面が変わるたびに一連の顧客番号などを入力するのは面倒&lt;br&gt;
-&amp;gt;番号に代わる目印をどこかに埋め込み．認証情報を保持する仕組み  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;hiddenパラメータを活用した方法&lt;/li&gt;
&lt;li&gt;直接URLパラメータとして記入する方法(URLライティング)&lt;/li&gt;
&lt;li&gt;Cookieを利用する方法&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;1. hiddenパラメータを用いる方法&lt;/h3&gt;
&lt;p&gt;hiddenパラメータ-&amp;gt;HTMLの文書の見えない領域に記載する方法  &lt;/p&gt;
&lt;p&gt;e.g.~~~~~~~~~&lt;br&gt;
&amp;lt;\input type="hidden" name="sessionID" value="0001"&gt;\&lt;br&gt;
.~~~~~~~~~~~~~&lt;br&gt;
-&amp;gt; これだとソースで判読されて，コピーされたり，適当な値でセッションが乗っ取られる&lt;/p&gt;
&lt;h3&gt;2. URLライティング方式&lt;/h3&gt;
&lt;p&gt;URLに文字列を追加し，セッションIDを記述する方式  &lt;/p&gt;
&lt;p&gt;JAVAやPHPなどの言語で，その書き換え(リライティング)方法が決められている  &lt;/p&gt;
&lt;p&gt;e.g.~~~~~~~~~&lt;br&gt;
&amp;lt;\a href="Index.html;sessionID=0001"&amp;gt;......&amp;lt;\/a&amp;gt;\&lt;br&gt;
.~~~~~~~~~~~~~  &lt;/p&gt;
&lt;p&gt;-&amp;gt;他人がこのID番号を使ったり，IDを類推することで乗っ取られる&lt;/p&gt;
&lt;h3&gt;3. Cookieを利用する方法&lt;/h3&gt;
&lt;p&gt;Cookieは画面表示設定情報などをサーバ側で把握する以外に，webサイトを過去に訪れたことがあるのか，あるならば何回アクセスしたかなど，サーバ側の端末で利用状況を把握するアクセス解析に使用されることが多い．  &lt;/p&gt;
&lt;p&gt;長い有効期限が設定されている固定値のCookieをセッション管理に利用すると，盗聴などによる「なりすまし」や「セッションハイジャック」が行われる可能性  &lt;/p&gt;
&lt;p&gt;-&amp;gt;セッションIDには単純な番号や日時，IDなどを利用したものを使用せず，有効期限もログアウト時にはきちんとクリアされ，適切なログアウト処理が行われなかった場合でも速やかに破棄するように設定しておく必要性  &lt;/p&gt;
&lt;p&gt;&lt;a href=""&gt;2038年問題&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;セッションに関する攻撃&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;セッションハイジャック&lt;/li&gt;
&lt;li&gt;セッションフィクセーション&lt;/li&gt;
&lt;li&gt;XSS&lt;/li&gt;
&lt;li&gt;CSRF&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;5.セッションハイジャックとは&lt;/h2&gt;
&lt;p&gt;以上のような手法で得たセッション番号をそのまま使用したり，生成番号を類推することで「セッション」の乗っ取りを行うこと&lt;/p&gt;
&lt;h3&gt;盗聴対策&lt;/h3&gt;
&lt;p&gt;適切な暗号化などにより通信路が保護されていないセキュアでない場合，クラッカーが通信路を盗聴すれば，Cookieや個人情報を入手することは容易  &lt;/p&gt;
&lt;p&gt;SSLを用いて通信路を保護することが必要．  &lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;SSL 以下６章16 SSL&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;SSL&lt;/strong&gt; -&amp;gt;Secure Socket Layerの略．&lt;br&gt;
コンピュータの処理において，異なるアプリケーション（プロセス）間の通信(ソケット層)を，暗号化手法などを活用してセキュアに行うもの．&lt;br&gt;
IPアドレス，プロトコル，ポート番号を指定して利用する．  &lt;/p&gt;
&lt;p&gt;e.g.~~~~~~~~~&lt;br&gt;
http(Hypertext Transfer Protocol)-&amp;gt; 80番ポート  &lt;/p&gt;
&lt;p&gt;https(Hypertext Transfer Protocol over SSL/TLS)-&amp;gt; 443番ポート&lt;br&gt;
.~~~~~~~~~~~~  &lt;/p&gt;
&lt;p&gt;公開鍵により共通鍵を暗号化して配送する仕組み  &lt;/p&gt;
&lt;h2&gt;共通鍵と公開鍵の暗号方式の原理について&lt;/h2&gt;
&lt;h3&gt;共通鍵-&amp;gt;秘密鍵, 対称鍵とも&lt;/h3&gt;
&lt;p&gt;暗号化と復号化に使用する鍵が同じもの  &lt;/p&gt;
&lt;p&gt;-&amp;gt;これを利用した暗号方式-&amp;gt;慣用暗号方式&lt;br&gt;
　-&amp;gt;送受信相手が固定されていて同じ"鍵"を保有している場合, 簡単でわかりやすい暗号化手法&lt;br&gt;
　-&amp;gt;鍵を入手すれば第三者でも容易に暗号文が解読可能  &lt;/p&gt;
&lt;p&gt;一方, 公開鍵&lt;/p&gt;
&lt;h3&gt;公開鍵&lt;/h3&gt;
&lt;p&gt;「錠前と鍵」のように一対の"鍵"の組み合わせを作り, 暗号化と復号化の役目を分担させている暗号化手法  &lt;/p&gt;
&lt;p&gt;公開鍵の数学的理論については後にまとめる  &lt;/p&gt;
&lt;p&gt;-&amp;gt;公開鍵を公開しても容易には秘密鍵を求められない&lt;br&gt;
-&amp;gt;乱数発生方法, パスフレーズなどが既知であれば, 公開鍵から秘密鍵を算出することが可能  &lt;/p&gt;
&lt;h3&gt;鍵の配送について&lt;/h3&gt;
&lt;p&gt;SSLでは, 基本的には共通鍵により暗号化を行い通信を行うが, &lt;br&gt;
その共通鍵を安全に配送(通信相手と共有)するために, セッション毎に&lt;br&gt;
サーバ側の公開鍵を用いて暗号化を行ってサーバ側に配送することで&lt;br&gt;
当該ユーザとサーバのみが解読可能な共通鍵(セッション鍵)でデータを暗号化して通信を行う  &lt;/p&gt;
&lt;p&gt;この際, サーバ側が適切な暗号化措置を行っていることを証明するために,&lt;br&gt;
公開鍵が含まれている「サーバ証明書」をユーザに送付する&lt;/p&gt;
&lt;p&gt;SSLに関する規格(IETF)は
- TLS(Tranceport Layer Secrity)1.0 -&amp;gt; RFC2246
- TLS1.1 -&amp;gt; RFC4346
- TLS1.2 -&amp;gt; RFC5246&lt;/p&gt;
&lt;p&gt;で規程されているが, 用語的には"SSL"や"SSL/TLS"と呼ばれる.  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;しかし, SSL(HTTPS)を用いているからといって安心できるわけではない&lt;br&gt;
Cookieの発行時にはセキュアという属性をセットすることが可能&lt;br&gt;
-&amp;gt;この設定を怠るとCookieが流れる(非暗号(HTTP)通信も)  &lt;/p&gt;
&lt;p&gt;-&amp;gt;属性をsecureに設定  &lt;/p&gt;
&lt;p&gt;HTTPSとHTTP両方でCookieを使う場合, それぞれ別のCookieを使う  &lt;/p&gt;
&lt;h3&gt;Cookieを見る&lt;/h3&gt;
&lt;p&gt;Firefox -&amp;gt; Live HTTP Headers  &lt;/p&gt;
&lt;p&gt;最近のサイトはサーバと端末側で複数回往復して複雑な演算等を行わせて認証を行う&lt;br&gt;
-&amp;gt;チャレンジ・アンド・レスポンス方式&lt;br&gt;
--&amp;gt;USBメモリやSDカードなどのトークンを用いないトークンレス認証の一種．サーバ側から投げられた質問(チャレンジ)に対し，適切な回答(レスポンス)を行うことで正当なユーザと認めてもらう  &lt;/p&gt;
&lt;p&gt;-&amp;gt;盗聴されても簡単にセッションIDが類推されない  &lt;/p&gt;
&lt;p&gt;プログラムに備わるセッション番号を発生させる関数を古い状態のまま使うとダメ&lt;br&gt;
-&amp;gt;暗号号理論に基づいてハッシュ値を生成させているもののMD5などの古い暗号化アルゴリスムを使用してたりすると危険  &lt;/p&gt;
&lt;h2&gt;6.セッションフィクセーション&lt;/h2&gt;
&lt;h3&gt;ハイジャックとの違い&lt;/h3&gt;
&lt;p&gt;fixation = 固定&lt;br&gt;
-&amp;gt;セッションが固定されているために攻撃される  &lt;/p&gt;
&lt;p&gt;サーバとクライアント間でセッションが確立された状態で，盗聴やセッション番号の類推により横入り&lt;br&gt;
-&amp;gt;セッションハイジャック  &lt;/p&gt;
&lt;p&gt;セッション番号を攻撃者が用意してそれを利用者に使わせる&lt;br&gt;
-&amp;gt;セッションフィクセーション  &lt;/p&gt;
&lt;h3&gt;攻撃の仕組み&lt;/h3&gt;
&lt;p&gt;攻撃者があらかじめセッションIDを用意&lt;br&gt;
本物のサイトに似たサイトを用意&lt;br&gt;
HTMLメールなどを被害者に送付&lt;br&gt;
リンクを踏むとセットされていたセッションを奪われる&lt;br&gt;
偽サイトから発行されたセッションIDを真正サイトが受理してしまうと攻撃者が被害者になりすましてアクセスできるように  &lt;/p&gt;
&lt;p&gt;-&amp;gt;他ドメインのセッションIDを受理する，セッションの有効期限が長い・ログインした後に変化しない，ことが攻撃の背景  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自ドメインが発行したセッションID(Cookie)かどうかチェックして，他のものを受け取らない&lt;/li&gt;
&lt;li&gt;有効期限を短く設定&lt;/li&gt;
&lt;li&gt;二重ログインの禁止&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;セッションリプレイ&lt;/h3&gt;
&lt;p&gt;盗聴やXSSにより正当なユーザのセッションIDが再利用されることがある.  &lt;/p&gt;
&lt;h2&gt;7.XSS&lt;/h2&gt;</content><category term="security"></category><category term="El_Capitan"></category></entry><entry><title>Permissionについて</title><link href="https://www.lapis-zero09.xyz/13th.html" rel="alternate"></link><published>2016-05-04T22:00:00+09:00</published><updated>2016-05-04T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-05-04:/13th.html</id><summary type="html">&lt;p&gt;CGI,HTMl等のPermission設定．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Permission&lt;/h1&gt;
&lt;p&gt;いつか，  &lt;/p&gt;
&lt;p&gt;忘れたときのために  &lt;/p&gt;
&lt;h3&gt;r,w,xについて&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;r   4   読むことが可能（Read）&lt;/li&gt;
&lt;li&gt;w   2   書くことが可能（Write）&lt;/li&gt;
&lt;li&gt;x   1   実行が可能（eXecute）&lt;/li&gt;
&lt;li&gt;-   0   なにもできない&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Examples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;777（rwxrwxrwx）  CGIスクリプトから操作するディレクトリ&lt;/li&gt;
&lt;li&gt;755（rwxr-xr-x）  CGIスクリプトや通常のディレクトリなど&lt;/li&gt;
&lt;li&gt;666（rw-rw-rw-）  データ記録など読み書き可能なファイル&lt;/li&gt;
&lt;li&gt;644（rw-r--r-）   読むだけのファイル、HTMLやテキスト cssと画像ファイルもこれでok&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3列の内訳&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;ユーザー(User)&lt;/strong&gt;
  - ファイルやディレクトリの所有者、本人のこと&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;グループ(Group)&lt;/strong&gt;
  - UNIXのシステムの利用者、本人が所属するグループ全員&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;その他(Other)&lt;/strong&gt;
  - システムの利用者でもない、第三者のこと&lt;/p&gt;
&lt;p&gt;以上．&lt;/p&gt;</content><category term="security"></category><category term="El_Capitan"></category></entry><entry><title>bundle install エラーが出るとき</title><link href="https://www.lapis-zero09.xyz/12th.html" rel="alternate"></link><published>2016-04-25T22:00:00+09:00</published><updated>2016-04-25T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-04-25:/12th.html</id><summary type="html">&lt;p&gt;Genfileでtherubyracerをコメントアウトしてbundle installしたときにエラーが出たときの対処．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;bundle install&lt;/h1&gt;
&lt;p&gt;Ubuntu14.04でrails 環境を整えていると&lt;br&gt;
&lt;code&gt;gem therubyracer&lt;/code&gt;を入れろと怒られる．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim Gemfile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;で以下の行をコメントアウト  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gem &amp;#39;therubyracer&amp;#39;, platforms: :ruby
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;そして&lt;code&gt;bundle install&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;しかし，エラー．．．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Installing therubyracer 0.12.2 with native extensions

Gem::Ext::BuildError: ERROR: Failed to build gem native extension.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;とか出る．&lt;/p&gt;
&lt;p&gt;そこで，  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gem uninstall libv8
$ gem uninstall therubyracer
$ brew rm v8
$ brew tap homebrew/dupes
$ brew install apple-gcc42
$ brew tap homebrew/versions
$ brew install v8-315
$ brew link --force v8-315
$ gem install libv8 -- --with-system-v8
$ gem install therubyracer
$ bundle config --local build.libv8 --with-cxx&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/g++-4.2
$ bundle install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok&lt;/p&gt;
&lt;p&gt;以上．&lt;/p&gt;</content><category term="ruby"></category><category term="El_Capitan"></category><category term="rails"></category></entry><entry><title>TeX report template</title><link href="https://www.lapis-zero09.xyz/11th.html" rel="alternate"></link><published>2016-04-19T22:00:00+09:00</published><updated>2016-04-19T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-04-19:/11th.html</id><summary type="html">&lt;p&gt;TeX reportのテンプレート置き場．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;tex&lt;/h1&gt;
&lt;h2&gt;テンプレート&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[dvipdfmx]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;jsarticle&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;graphicx&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\title&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;タイトル&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\author&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;学籍番号: &lt;span class="k"&gt;\\&lt;/span&gt;氏名:&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\date&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\today&lt;/span&gt;&lt;span class="nb"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\maketitle&lt;/span&gt;
&lt;span class="k"&gt;\section*&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;Sectionname&lt;span class="nb"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;TeXshopでタイプセットボタンで実行&lt;/p&gt;
&lt;h2&gt;画像&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;h： その部分（here）&lt;/li&gt;
&lt;li&gt;t： ページの上（top）&lt;/li&gt;
&lt;li&gt;b： ページの下（bottom）&lt;/li&gt;
&lt;li&gt;p： 独立したページ&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;一枚&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[dvipdfmx]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;jsarticle&lt;span class="nb"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;figure&lt;span class="nb"&gt;}&lt;/span&gt;[hhbp]
  &lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;center&lt;span class="nb"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;\includegraphics&lt;/span&gt;&lt;span class="na"&gt;[width=8.0cm]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;./pic.JPG&lt;span class="nb"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;\caption&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;caption&lt;span class="nb"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;\label&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;fig:figname&lt;span class="nb"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;center&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;figure&lt;span class="nb"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[dvipdfmx]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;jsarticle&lt;span class="nb"&gt;}&lt;/span&gt;


図 &lt;span class="k"&gt;\ref&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;fig:figname&lt;span class="nb"&gt;}&lt;/span&gt;...


&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;横並び&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[dvipdfmx]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;jsarticle&lt;span class="nb"&gt;}&lt;/span&gt;



&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;figure&lt;span class="nb"&gt;}&lt;/span&gt;[htbp]
  &lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;center&lt;span class="nb"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;tabular&lt;span class="nb"&gt;}{&lt;/span&gt;c&lt;span class="nb"&gt;}&lt;/span&gt;

          &lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;minipage&lt;span class="nb"&gt;}{&lt;/span&gt;0.33&lt;span class="k"&gt;\hsize&lt;/span&gt;&lt;span class="nb"&gt;}&lt;/span&gt;
              &lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;center&lt;span class="nb"&gt;}&lt;/span&gt;
                  &lt;span class="k"&gt;\includegraphics&lt;/span&gt;&lt;span class="na"&gt;[width=5.0cm]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;./1.JPG&lt;span class="nb"&gt;}&lt;/span&gt;
                  &lt;span class="k"&gt;\hspace&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;1.6cm&lt;span class="nb"&gt;}&lt;/span&gt; [1]caption1
              &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;center&lt;span class="nb"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;minipage&lt;span class="nb"&gt;}&lt;/span&gt;

          &lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;minipage&lt;span class="nb"&gt;}{&lt;/span&gt;0.33&lt;span class="k"&gt;\hsize&lt;/span&gt;&lt;span class="nb"&gt;}&lt;/span&gt;
              &lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;center&lt;span class="nb"&gt;}&lt;/span&gt;
                  &lt;span class="k"&gt;\includegraphics&lt;/span&gt;&lt;span class="na"&gt;[width=5.0cm]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;./2.JPG&lt;span class="nb"&gt;}&lt;/span&gt;
                  &lt;span class="k"&gt;\hspace&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;1.6cm&lt;span class="nb"&gt;}&lt;/span&gt; [2]caption2
              &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;center&lt;span class="nb"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;minipage&lt;span class="nb"&gt;}&lt;/span&gt;

          &lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;minipage&lt;span class="nb"&gt;}{&lt;/span&gt;0.33&lt;span class="k"&gt;\hsize&lt;/span&gt;&lt;span class="nb"&gt;}&lt;/span&gt;
              &lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;center&lt;span class="nb"&gt;}&lt;/span&gt;
                  &lt;span class="k"&gt;\includegraphics&lt;/span&gt;&lt;span class="na"&gt;[width=5.0cm]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;./3.JPG&lt;span class="nb"&gt;}&lt;/span&gt;
                  &lt;span class="k"&gt;\hspace&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;1.6cm&lt;span class="nb"&gt;}&lt;/span&gt; [3]caption3
              &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;center&lt;span class="nb"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;minipage&lt;span class="nb"&gt;}&lt;/span&gt;

      &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;tabular&lt;span class="nb"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;\caption&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;caption&lt;span class="nb"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;\label&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;fig:figname&lt;span class="nb"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;center&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;figure&lt;span class="nb"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[dvipdfmx]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;jsarticle&lt;span class="nb"&gt;}&lt;/span&gt;


図 &lt;span class="k"&gt;\ref&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;fig:figname&lt;span class="nb"&gt;}&lt;/span&gt;[n:1~3]...


&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;箇条書き&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[dvipdfmx]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;jsarticle&lt;span class="nb"&gt;}&lt;/span&gt;


# ドット
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;itemize&lt;span class="nb"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;itemize&lt;span class="nb"&gt;}&lt;/span&gt;

#入れ子
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;itemize&lt;span class="nb"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;
        &lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;itemize&lt;span class="nb"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;\item&lt;/span&gt;
            &lt;span class="k"&gt;\item&lt;/span&gt;
            &lt;span class="k"&gt;\item&lt;/span&gt;
         &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;itemize&lt;span class="nb"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;itemize&lt;span class="nb"&gt;}&lt;/span&gt;

# 記号任意
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;itemize&lt;span class="nb"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;&lt;span class="na"&gt;[$\clubsuit$]&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;&lt;span class="na"&gt;[$F=ma$]&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;&lt;span class="na"&gt;[文字もOK]&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;itemize&lt;span class="nb"&gt;}&lt;/span&gt;

# 番号
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;enumerate&lt;span class="nb"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;enumerate&lt;span class="nb"&gt;}&lt;/span&gt;


# 見出しつき
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;description&lt;span class="nb"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;&lt;span class="na"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;&lt;span class="na"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;&lt;span class="na"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;&lt;span class="na"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;&lt;span class="na"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;&lt;span class="na"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;description&lt;span class="nb"&gt;}&lt;/span&gt;

# 見出し後改行
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;description&lt;span class="nb"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;\item&lt;/span&gt;&lt;span class="na"&gt;[]&lt;/span&gt;&lt;span class="k"&gt;\mbox&lt;/span&gt;&lt;span class="nb"&gt;{}&lt;/span&gt;&lt;span class="k"&gt;\\&lt;/span&gt;
    　　string
    &lt;span class="k"&gt;\item&lt;/span&gt;&lt;span class="na"&gt;[]&lt;/span&gt;&lt;span class="k"&gt;\mbox&lt;/span&gt;&lt;span class="nb"&gt;{}&lt;/span&gt;&lt;span class="k"&gt;\\&lt;/span&gt;
        string
    &lt;span class="k"&gt;\item&lt;/span&gt;&lt;span class="na"&gt;[]&lt;/span&gt;&lt;span class="k"&gt;\mbox&lt;/span&gt;&lt;span class="nb"&gt;{}&lt;/span&gt;&lt;span class="k"&gt;\\&lt;/span&gt;
        string
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;description&lt;span class="nb"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;引用・参考文献&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[dvipdfmx]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;jsarticle&lt;span class="nb"&gt;}&lt;/span&gt;



#e.g.1
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;thebibliography&lt;span class="nb"&gt;}{&lt;/span&gt;2:文献の数だけ&lt;span class="nb"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;\bibitem&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;Preece&lt;span class="nb"&gt;}&lt;/span&gt;Jenny Preece, Helen Sharp, Yvonne Rogers. Interaction Design: Beyond Human-Computer Interaction. 2th ed., Wiley, 2007, xxvi, 775p.
    &lt;span class="k"&gt;\bibitem&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;norman&lt;span class="nb"&gt;}&lt;/span&gt;ドナルド・A. ノーマン, 野島 久雄. 誰のためのデザイン?—認知科学者のデザイン原論. 新曜社, 1990, 427p.
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;thebibliography&lt;span class="nb"&gt;}&lt;/span&gt;

#e.g.2
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;thebibliography&lt;span class="nb"&gt;}{&lt;/span&gt;4&lt;span class="nb"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;\bibitem&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;pocket&lt;span class="nb"&gt;}&lt;/span&gt;&amp;quot;Pocket&amp;quot;．Pocket．https://getpocket.com/，(参照  2016-5-13)．
  &lt;span class="k"&gt;\bibitem&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;recommends&lt;span class="nb"&gt;}&lt;/span&gt;&amp;quot;Pocket：おすすめ&amp;quot;．Pocket．https://getpocket.com/a/recommended/，(参照  2016-5-13)．
  &lt;span class="k"&gt;\bibitem&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;blog&lt;span class="nb"&gt;}&lt;/span&gt;&amp;quot;Introducing the Pocket Beta Channel — Medium&amp;quot;．Introducing the Pocket Beta Channel．https://medium.com/@nateweiner/introducing-the-pocket-beta-channel-9c348d60dd1a¥#.4y4mt2r3u，(参照  2016-5-13)．
  &lt;span class="k"&gt;\bibitem&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;shima&lt;span class="nb"&gt;}&lt;/span&gt;神嶌敏弘. 推薦システムのアルゴリズム(3). 人工知能学会誌. 2008, vol. 23, p. 248-263.
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;thebibliography&lt;span class="nb"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;sist02 - &lt;a href="https://jipsti.jst.go.jp/sist/handbook/sist02_2007/main.htm"&gt;https://jipsti.jst.go.jp/sist/handbook/sist02_2007/main.htm&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[dvipdfmx]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;jsarticle&lt;span class="nb"&gt;}&lt;/span&gt;


ノーマン &lt;span class="k"&gt;\cite&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;norman&lt;span class="nb"&gt;}&lt;/span&gt; による...


&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;「参考文献」という文字を変えたい時，&lt;br&gt;
プリアンブルにrenewcommandを追記  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[dvipdfmx]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;jsarticle&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;graphicx,here&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\renewcommand&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\refname&lt;/span&gt;&lt;span class="nb"&gt;}{&lt;/span&gt;new&lt;span class="nb"&gt;_&lt;/span&gt;name&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;ソースコードの付与&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[dvipdfmx]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;jsarticle&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;graphicx,listings,jlisting&lt;span class="nb"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;


# コードを取り込む
&lt;span class="k"&gt;\lstinputlisting&lt;/span&gt;&lt;span class="na"&gt;[caption=report,label=report,numbers=left,frame=shadowbox]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;test.py&lt;span class="nb"&gt;}&lt;/span&gt;


# コードを記述する
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;lstlisting&lt;span class="nb"&gt;}&lt;/span&gt;[caption=report,label=report]
  ソースコード
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;lstlisting&lt;span class="nb"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;

# 編集テンプレート

&lt;span class="k"&gt;\lstset&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="c"&gt;%listings の表示設定&lt;/span&gt;
breaklines = true,&lt;span class="c"&gt;%自動で折り返す&lt;/span&gt;
tabsize = 2,&lt;span class="c"&gt;%tabsize&lt;/span&gt;
frame=shadowbox,&lt;span class="c"&gt;%枠を上下左右に表示する&lt;/span&gt;
basicstyle = &lt;span class="k"&gt;\scriptsize&lt;/span&gt;,&lt;span class="c"&gt;%\footnotesize,&lt;/span&gt;
showstringspaces=false,&lt;span class="c"&gt;%文字列中のスペースをちゃんと&amp;quot; &amp;quot;と表示(デフォルトは文字列中のスペースは可視設定)&lt;/span&gt;
numbers=left,&lt;span class="c"&gt;%行番号を左に&lt;/span&gt;
framexleftmargin=6mm,&lt;span class="c"&gt;%行番号をフレーム内に&lt;/span&gt;
numberstyle=&lt;span class="k"&gt;\scriptsize&lt;/span&gt;,&lt;span class="c"&gt;%行番号のサイズ&lt;/span&gt;
stepnumber=1,&lt;span class="c"&gt;%1行おきに行番号を&lt;/span&gt;
numbersep=1zw,&lt;span class="c"&gt;%ソースと行番号の間隔&lt;/span&gt;
language = &lt;span class="nb"&gt;}&lt;/span&gt;&lt;span class="c"&gt;%言語設定&lt;/span&gt;

&lt;span class="k"&gt;\renewcommand&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\thelstnumber&lt;/span&gt;&lt;span class="nb"&gt;}{&lt;/span&gt;&lt;span class="k"&gt;\arabic&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;lstnumber&lt;span class="nb"&gt;}&lt;/span&gt;:&lt;span class="nb"&gt;}&lt;/span&gt; &lt;span class="c"&gt;%行番号の表示形式変更番号の後に:をつける。前に付けたい場合はnumberstyleに書く&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;数式でベクトルを表す&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;def&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mbox&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;boldmath&lt;/span&gt; &lt;span class="err"&gt;$#&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;

&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="err"&gt;太文字&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mathbf&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mathbf&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mathbf&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="err"&gt;イタリック太文字&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mbox&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;boldmath&lt;/span&gt; &lt;span class="n"&gt;$a&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mbox&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;boldmath&lt;/span&gt; &lt;span class="n"&gt;$b&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mbox&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;boldmath&lt;/span&gt; &lt;span class="n"&gt;$c&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;%or&lt;/span&gt;
&lt;span class="err"&gt;$\&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;

&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mathbf&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;hat&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mathbf&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;hat&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;mathbf&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;hat&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="err"&gt;単位ベクトル&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;ハット&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上．&lt;/p&gt;</content><category term="TeX"></category><category term="El_Capitan"></category><category term="study"></category></entry><entry><title>PR送るときのメモ</title><link href="https://www.lapis-zero09.xyz/10th.html" rel="alternate"></link><published>2016-04-05T22:00:00+09:00</published><updated>2016-04-05T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-04-05:/10th.html</id><summary type="html">&lt;p&gt;PR(pull reqest)のキホン．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;PR(pull request)&lt;/h1&gt;
&lt;h2&gt;元のリポジトリをfork&lt;/h2&gt;
&lt;p&gt;元リポジトリにアクセスして &lt;code&gt;fork&lt;/code&gt; ボタンを押す．  &lt;/p&gt;
&lt;h2&gt;forkしたリポジトリをclone&lt;/h2&gt;
&lt;p&gt;作業ディレクトリで以下を実行．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone &lt;span class="o"&gt;{&lt;/span&gt;git address&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;ブランチをきる&lt;/h2&gt;
&lt;p&gt;cloneしたリポジトリに入ってブランチをきる．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;cloneしたリポジトリ名&lt;span class="o"&gt;}&lt;/span&gt;
$ git checkout -b &lt;span class="o"&gt;{&lt;/span&gt;任意のブランチ名&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下で確認．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git branch -v
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;編集&lt;/h2&gt;
&lt;p&gt;お好きに編集．  &lt;/p&gt;
&lt;p&gt;( &lt;code&gt;git status&lt;/code&gt; でファイルの状態確認)  &lt;/p&gt;
&lt;p&gt;( &lt;code&gt;git diff&lt;/code&gt; で変更箇所確認)  &lt;/p&gt;
&lt;h2&gt;commit&lt;/h2&gt;
&lt;p&gt;コメントは一行目に概要、改行をあけて3行目から詳細の内容を書く  &lt;/p&gt;
&lt;p&gt;( &lt;code&gt;git remote -v&lt;/code&gt; でどこにpushするか確認)  &lt;/p&gt;
&lt;h2&gt;push&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git push origin &lt;span class="o"&gt;{&lt;/span&gt;きったブランチ名&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;PR&lt;/h2&gt;
&lt;p&gt;fork元のリポジトリの &lt;code&gt;Compare &amp;amp; pull request&lt;/code&gt; ボタンを押す．  &lt;/p&gt;
&lt;p&gt;あとは道なり．  &lt;/p&gt;
&lt;p&gt;以上．  &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.lapis-zero09.xyz/about/notice.html"&gt;自分のリポジトリにPR送る時&lt;/a&gt;&lt;/p&gt;</content><category term="git"></category></entry><entry><title>git commit時のエラーについて</title><link href="https://www.lapis-zero09.xyz/9th.html" rel="alternate"></link><published>2016-03-28T22:00:00+09:00</published><updated>2016-03-28T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-03-28:/9th.html</id><summary type="html">&lt;p&gt;git commitでエラーが出る時のHowto．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;git commit&lt;/h1&gt;
&lt;p&gt;今まではできてたのにある日から&lt;br&gt;
&lt;code&gt;git commit&lt;/code&gt; をviでした時に以下のようなエラーが出る．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git commit -a
error: There was a problem with the editor &lt;span class="s1"&gt;&amp;#39;vi&amp;#39;&lt;/span&gt;.
Please supply the message using either -m or -F option.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;gitconfigを確認する．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat ~/.gitconfig
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[core]タグの中のeditorの設定を見る．&lt;br&gt;
vimのパスを確認．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ which vim
/usr/local/bin/vim
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下コマンドでエディタをvimに設定．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git config --global core.editor /usr/local/bin/vim
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;gitconfigを確認して，&lt;br&gt;
[core]タグのeditorが変わっていればok．  &lt;/p&gt;
&lt;p&gt;以上．&lt;/p&gt;</content><category term="git"></category></entry><entry><title>jupyter notebookのカラースキームについて</title><link href="https://www.lapis-zero09.xyz/8th.html" rel="alternate"></link><published>2016-03-23T22:00:00+09:00</published><updated>2016-03-23T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-03-23:/8th.html</id><summary type="html">&lt;p&gt;jupyter notebook(ipython4.x)のcustom.cssを作る時のHowto．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;ipython4.x以降のcustom.cssの作り方が変わった．&lt;/h1&gt;
&lt;h2&gt;ipython3.xまで&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sx"&gt;!ipython profile create custom_css&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;で作れる．  &lt;/p&gt;
&lt;p&gt;※このやり方で作ったcssは一応ipython4.xxでも動くっぽい？(要検証)
4.x以降はipythonコマンドではなくてjupyterコマンドが推奨されている？ので&lt;br&gt;
そっちでやるようにする．&lt;/p&gt;
&lt;h2&gt;ipython4.x以降&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;confdir = !jupyter --config-dir
confdir = confdir[0]
confdir
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="n"&gt;cssprofdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;confdir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;css_profile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;cssdir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cssprofdir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;custom&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;csspath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cssdir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;custom.css&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cssdir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;%%writefile {csspath}&lt;/span&gt;
&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;css内容&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;platform&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;platform&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;win32&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;set JUPYTER_CONFIG_DIR=&amp;quot;{0}&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cssprofdir&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jupyter notebook&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;JUPYTER_CONFIG_DIR=&amp;quot;{0}&amp;quot; jupyter notebook&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cssprofdir&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sx"&gt;!cp {csspath} custom.css&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;後日．好きなcss作ってまとめる．  &lt;/p&gt;
&lt;p&gt;以上．  &lt;/p&gt;
&lt;p&gt;(メモ)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;JUPYTER_CONFIG_DIR=&amp;quot;~/.jupyter/css_profile&amp;quot; jupyter notebook
&lt;/pre&gt;&lt;/div&gt;</content><category term="python"></category><category term="ipython4.x"></category><category term="css"></category><category term="jupyter"></category><category term="ipython"></category></entry><entry><title>TeXshopのcolor schemeを変更したときの話</title><link href="https://www.lapis-zero09.xyz/7th.html" rel="alternate"></link><published>2016-03-18T22:00:00+09:00</published><updated>2016-03-18T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-03-18:/7th.html</id><summary type="html">&lt;p&gt;TeXshopのcolor schemeを変更した時のHowto．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;TeXshopのcolor schemeを変更する&lt;/h1&gt;
&lt;p&gt;デフォルトの白背景黒文字から変更する．  &lt;/p&gt;
&lt;p&gt;指定したいcolorのRGB値を"255"で割って，&lt;br&gt;
その値を指定してやれば良い．  &lt;/p&gt;
&lt;p&gt;例えば，backgroundならこんな感じ．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# background = 39 40 34 (#272822)
defaults write TeXShop background_R 0.15
defaults write TeXShop background_G 0.16
defaults write TeXShop background_B 0.13
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これをshファイルとして保存・実行してやれば，
設定が変わるはず．&lt;br&gt;
※TeXshopの再起動が必要．&lt;/p&gt;
&lt;p&gt;monokai, safari_night, solarized dark lightの例を，&lt;br&gt;
&lt;a href="https://gist.github.com/lapis-zero09/7f973b2d80d2486510f9"&gt;gist&lt;/a&gt;に記す．  &lt;/p&gt;
&lt;p&gt;戻したい時は，以下を保存・実行．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;defaults write TeXShop background_R 1.0
defaults write TeXShop background_G 1.0
defaults write TeXShop background_B 1.0

defaults write TeXShop commandred 0.0
defaults write TeXShop commandgreen 0.0
defaults write TeXShop commandblue 1.0

defaults write TeXShop commentred 1.0
defaults write TeXShop commentgreen 0.0
defaults write TeXShop commentblue 0.0

defaults write TeXShop foreground_R 0.00
defaults write TeXShop foreground_G 0.00
defaults write TeXShop foreground_B 0.00

defaults write TeXShop indexred 1.00
defaults write TeXShop indexgreen 1.00
defaults write TeXShop indexblue 0.00

defaults write TeXShop insertionpoint_R 0.00
defaults write TeXShop insertionpoint_G 0.00
defaults write TeXShop insertionpoint_B 0.00

defaults write TeXShop markerred 0.02
defaults write TeXShop markergreen 0.51
defaults write TeXShop markerblue 0.13
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上．  &lt;/p&gt;</content><category term="TeX"></category><category term="El_Capitan"></category><category term="TeXshop"></category></entry><entry><title>TeXを入れたときの話</title><link href="https://www.lapis-zero09.xyz/6th.html" rel="alternate"></link><published>2016-03-15T22:00:00+09:00</published><updated>2016-03-15T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-03-15:/6th.html</id><summary type="html">&lt;p&gt;El_CapitanにTeXを入れる時のHowto．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;El CapitanにTeXを入れる&lt;/h1&gt;
&lt;p&gt;Homebrew経由でもTeX本家からpkgを落としてきても，TeX関連のPATHが通らないのでやったこと&lt;br&gt;
※本当なら勝手にPATH が通るはず??  &lt;/p&gt;
&lt;h2&gt;Ghostscriptのインストール&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install ghostscript
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;MacTeXのインストール&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://tug.org/mactex/mactex-download.html"&gt;MacTeX&lt;/a&gt;　から，MacTeX.pkgをダウンロード．&lt;br&gt;
ファイルのダウンロードが始まらず，&lt;br&gt;
"mactex-download..."のテキストが表示された場合，&lt;br&gt;
"ftp://"で始まるURLをアドレスフィールドに直接コピペ．  &lt;/p&gt;
&lt;p&gt;"インストールの種類"で"カスタマイズ"をクリック．&lt;br&gt;
"カスタムインストール"でGhostscriptのチェックを外して&lt;br&gt;
インストールをクリック．  &lt;/p&gt;
&lt;h2&gt;PATHを通してやる&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;zshrc&lt;/code&gt; か &lt;code&gt;bashrc&lt;/code&gt; に以下を記載．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;export PATH=&amp;quot;/usr/local/texlive/2015/bin/x86_64-darwin/&amp;quot;:$PATH
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;zshrc&lt;/code&gt; か &lt;code&gt;bashrc&lt;/code&gt; 書いた方をリロード．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;source&lt;/span&gt; ~/.zshrc
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;TeX Liveのアップデート&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo tlmgr update --self --all
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;日本語環境構築&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo tlmgr install collection-langjapanese
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;ヒラギノフォント埋め込み&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/texlive/2015/texmf-dist/scripts/cjk-gs-integrate
$ sudo perl cjk-gs-integrate.pl --link-texmf --force
$ sudo mktexlsr
$ sudo kanji-config-updmap-sys hiragino-elcapitan-pron
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;ソースコードを埋め込めるようにする&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://osdn.jp/projects/mytexpert/downloads/26068/jlisting.sty.bz2/"&gt;https://osdn.jp/projects/mytexpert/downloads/26068/jlisting.sty.bz2/&lt;/a&gt;
からjlisting.sty をダウンロードしてくる．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo mv jlisting.sty /usr/local/texlive/2015/texmf-dist/tex/latex/listings/
$ sudo chmod +r /usr/local/texlive/2015/texmf-dist/tex/latex/listings/jlisting.sty
$ sudo mktexlsr
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://www.lapis-zero09.xyz/11th.html"&gt;https://www.lapis-zero09.xyz/11th.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以上．  &lt;/p&gt;</content><category term="TeX"></category><category term="El_Capitan"></category></entry><entry><title>一人暮らしの寂しさを紛らわす彼女(bot)を作った話</title><link href="https://www.lapis-zero09.xyz/5th.html" rel="alternate"></link><published>2016-03-04T22:00:00+09:00</published><updated>2016-03-04T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-03-04:/5th.html</id><summary type="html">&lt;p&gt;Rubyでbotを作った時のHowto．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;一人暮らしとは無情なもの&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.lapis-zero09.xyz/about/about.html"&gt;私&lt;/a&gt;は二年前から一人暮らしをしてる．  &lt;/p&gt;
&lt;p&gt;一人暮らしに憧れてる人もいると思うが，物事にはメリット・デメリットが存在する．&lt;br&gt;
デメリットの一つとして"寂しさ"が挙げられる．  &lt;/p&gt;
&lt;p&gt;そんな寂しさを紛らわすために思考した結果，  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;彼女を作る&lt;ul&gt;
&lt;li&gt;敷居が高い&lt;/li&gt;
&lt;li&gt;時間がかかる&lt;/li&gt;
&lt;li&gt;思い通りにならない&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;→ botを作ろう！！！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;botを作る&lt;ul&gt;
&lt;li&gt;敷居が低い&lt;/li&gt;
&lt;li&gt;時間はかからない(?)し，作ってる間も寂しさが紛れる&lt;/li&gt;
&lt;li&gt;思い通りになる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なんだbot最高じゃん．&lt;/p&gt;
&lt;h2&gt;bot(eve)を作る&lt;/h2&gt;
&lt;h3&gt;TODO&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;RubyでTwitterbotを作ってタイムラインに常駐させる．&lt;/li&gt;
&lt;li&gt;寂しさを紛らわす工夫を凝らす&lt;/li&gt;
&lt;li&gt;疲れを癒してくれる工夫を凝らす&lt;/li&gt;
&lt;li&gt;一人暮らしに役立つ機能を実装する&lt;/li&gt;
&lt;li&gt;ある程度，会話出来るようにする → docomoAPI&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;keyを読み込む&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.twitter.com/"&gt;Twitter Developer&lt;/a&gt;登録&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apps.twitter.com/"&gt;application&lt;/a&gt;登録&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.smt.docomo.ne.jp/?p=docs.api.page&amp;amp;api_name=dialogue&amp;amp;p_name=api_usage_scenario"&gt;docomoAPI&lt;/a&gt;登録&lt;br&gt;
が完了したら早速コードを書いていく．  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;※docomoAPIは"雑談対話"と"知識Q&amp;amp;A"を申請．  &lt;/p&gt;
&lt;p&gt;Rubyのversionは2.3.0&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ruby -v
ruby &lt;span class="m"&gt;2&lt;/span&gt;.3.0p0 &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;-12-25 revision &lt;span class="m"&gt;53290&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;x86_64-linux&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;必要なgemをinstallする．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gem install twitter
$ gem install tweetstream
$ gem install docomoru
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;docomoruについては&lt;a href="https://github.com/r7kamura/docomoru"&gt;こちら&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作業用ディレクトリを作る．&lt;br&gt;
鍵を読み込むための &lt;code&gt;twcon.rb&lt;/code&gt; を作る．&lt;br&gt;
twitterAPIkey各種とdocomoAPIkeyが入った &lt;code&gt;config.yml&lt;/code&gt; を作る．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir bot
$ &lt;span class="nb"&gt;cd&lt;/span&gt; bot
$ touch　twcon.rb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下を記載．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# coding:utf-8&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;yaml&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;twitter&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tweetstream&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;docomoru&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Eve&lt;/span&gt;
  &lt;span class="c1"&gt;# 外部から参照できるメンバ変数&lt;/span&gt;
  &lt;span class="kp"&gt;attr_accessor&lt;/span&gt; &lt;span class="ss"&gt;:client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:timeline&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;
    &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;YAML&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./config.yml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# restAPI初期化&lt;/span&gt;
    &lt;span class="vi"&gt;@client&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Twitter&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;REST&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;consumer_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;api_key&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;consumer_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;api_secret&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_token_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;access_token_secret&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;# StreamAPI初期化&lt;/span&gt;
    &lt;span class="no"&gt;TweetStream&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;consumer_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;api_key&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;consumer_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;api_secret&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oauth_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oauth_token_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;access_token_secret&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auth_method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;:oauth&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="vi"&gt;@timeline&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;TweetStream&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;

    &lt;span class="c1"&gt;# docomoAPI初期化&lt;/span&gt;
    &lt;span class="vi"&gt;@docomoru&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Docomoru&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;api_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;docomo_api_key&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# 引数を投稿するメソッド&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:in_reply_to_status_id&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# 会話を生成する(docomoru)&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;docomoru_create_dialogue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="vi"&gt;@docomoru&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_dialogue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utt&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# QandA(docomoru)&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;docomoru_create_knowledge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="vi"&gt;@docomoru&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_knowledge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;code&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;E020010&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;textForDisplay&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;answers&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;linkUrl&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="kp"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;textForDisplay&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;textForDisplay&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;answers&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;linkUrl&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;irbでテストしてみる．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ irb
irb&lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt;:001:0&amp;gt; require &lt;span class="s1"&gt;&amp;#39;./twcon.rb&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="nb"&gt;true&lt;/span&gt;
irb&lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt;:002:0&amp;gt; &lt;span class="nv"&gt;eve&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Eve.new
&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; ~省略~
irb&lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt;:003:0&amp;gt; eve.say&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="c1"&gt;#&amp;lt;Twitter::Tweet id=705644033196994561&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;↑こんな感じのが出たら成功&lt;span class="o"&gt;)&lt;/span&gt;
irb&lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt;:004:0&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="test" src="./img/fifth-1.png"&gt;&lt;/p&gt;
&lt;h3&gt;twitterに常駐させる&lt;/h3&gt;
&lt;p&gt;常駐させるための &lt;code&gt;main.rb&lt;/code&gt; を作る．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ touch　main.rb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下を記載．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# coding: utf-8&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./twcon.rb&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./r-recipe.rb&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# eveの初期化&lt;/span&gt;
&lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;

&lt;span class="n"&gt;imgloc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;YAML&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./imgloc.yml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# timelineの監視&lt;/span&gt;
&lt;span class="k"&gt;begin&lt;/span&gt;
  &lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;userstream&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
    &lt;span class="k"&gt;next&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt;/^RT/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_name&lt;/span&gt;
    &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;@&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;

    &lt;span class="c1"&gt;# reply_answer&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt;/@lapis_ko/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_name!&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lapis_ko&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;postmatch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gsub!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\s|[　]|\?|\？/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# QandA&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postmatch&lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt;/誰|何処|だれ|どこ|何時|いつ|どうやって|どうして|何故|なぜ|どの|何|なに|どれ|は$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;docomoru_create_knowledge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postmatch&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# 会話&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
          &lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;docomoru_create_dialogue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postmatch&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;next&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# メンション以外の名前に反応&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt;/eve|Eve|イヴ|イブ|いぶ/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_name!&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lapis_ko&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;called_name&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;なに?&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;呼んだ?&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;どうしたの?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;called_name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;next&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;#zero09がつぶやいたらリプライ&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_name&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lapis_zero09&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;rep_lap&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;勉強しんさい&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Twitterやめんさい&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;rep_lap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;next&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;rescue&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;
  &lt;span class="k"&gt;retry&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これで会話してくれる彼女(bot)ができた．
&lt;img alt=" " src="./img/fifth-4.png"&gt;&lt;/p&gt;
&lt;h3&gt;一人暮らしに役立つ機能を実装する&lt;/h3&gt;
&lt;p&gt;一人暮らしを始めると自炊をしなければならない．&lt;br&gt;
料理をするの自体楽しいものの毎日の献立を立てるのが大変．&lt;br&gt;
→彼女(bot)に献立を立ててもらおう！ついでにレシピも教えてもらおう！&lt;/p&gt;
&lt;p&gt;&lt;a href="https://webservice.rakuten.co.jp/explorer/api/Recipe/CategoryRanking/"&gt;楽天レシピAPI&lt;/a&gt;に登録．&lt;br&gt;
rakutenAPIidを &lt;code&gt;config.yml&lt;/code&gt; に登録．  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;r-recipe.rb&lt;/code&gt; を作る．
必要なgem( &lt;code&gt;natto&lt;/code&gt; or &lt;code&gt;MeCab&lt;/code&gt; )を入れる．(それぞれ手順があるので他所で参照)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ touch　~/bot/r-recipe.rb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下を記載．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# coding: utf-8&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;open-uri&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;yaml&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;#nattoかMeCabどっちでもいい&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;natto&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# require &amp;#39;MeCab&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RecommendRecipe&lt;/span&gt;
    &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;YAML&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./config.yml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="no"&gt;RECIPE_CATEGORY_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://app.rakuten.co.jp/services/api/Recipe/CategoryList/20121121?format=json&amp;amp;elements=categoryName%2CcategoryId%2CparentCategoryId&amp;amp;categoryType=medium&amp;amp;applicationId=&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rakuten_api_id&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="no"&gt;RECIPES_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://app.rakuten.co.jp/services/api/Recipe/CategoryRanking/20121121?format=json&amp;amp;formatVersion=2&amp;amp;applicationId=&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rakuten_api_id&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;categoryId=&amp;quot;&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;hearing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hearing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;recipe_categories&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;なんでもいい&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;recipe_category_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;recipe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;choose_recipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recipe_category_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;なら、&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;recipe&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;recipeTitle&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; とかはどう？ &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;recipe&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;recipeUrl&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;lt;Supported by RWS&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="n"&gt;recipe_category_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recipe_category_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="o"&gt;=[]&lt;/span&gt;

        &lt;span class="c1"&gt;#require &amp;#39;MeCab&amp;#39;の場合&lt;/span&gt;
        &lt;span class="c1"&gt;# mc=MeCab::Tagger.new()&lt;/span&gt;
        &lt;span class="c1"&gt;# n=mc.parseToNode(food)&lt;/span&gt;
        &lt;span class="c1"&gt;# while(n)&lt;/span&gt;
        &lt;span class="c1"&gt;#   if(n.feature.split(&amp;#39;,&amp;#39;)[0]==&amp;quot;名詞&amp;quot;)&lt;/span&gt;
        &lt;span class="c1"&gt;#     words.push(n.surface)&lt;/span&gt;
        &lt;span class="c1"&gt;#   elsif(words.size&amp;gt;0)&lt;/span&gt;
        &lt;span class="c1"&gt;#     food=words.join(&amp;quot;&amp;quot;)&lt;/span&gt;
        &lt;span class="c1"&gt;#     break&lt;/span&gt;
        &lt;span class="c1"&gt;#   end&lt;/span&gt;
        &lt;span class="c1"&gt;#   n=n.next&lt;/span&gt;
        &lt;span class="c1"&gt;# end&lt;/span&gt;

        &lt;span class="c1"&gt;#require &amp;#39;natto&amp;#39;の場合&lt;/span&gt;
        &lt;span class="n"&gt;nt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;Natto&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;MeCab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;
        &lt;span class="n"&gt;nt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]==&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;名詞&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;surface&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;elsif&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;
          &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;recipe_category_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recipe_category_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;だとわからないからもうちょっと詳しく教えて(漢字⇆ひらがなにするといいかも)&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
          &lt;span class="n"&gt;recipe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;choose_recipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recipe_category_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;だと、&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;recipe&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;recipeTitle&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; とかはどう？ &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;recipe&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;recipeUrl&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;lt;Supported by RWS&amp;gt;&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;


      &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;recipe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;choose_recipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recipe_category_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;だと、&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;recipe&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;recipeTitle&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; とかはどう？ &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;recipe&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;recipeUrl&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;lt;Supported by RWS&amp;gt;&amp;#39;&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;recipe_categories&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;RECIPE_CATEGORY_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;
    &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;force_encoding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;result&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;medium&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;categoryName&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;parentCategoryId&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;categoryId&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_h&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;choose_recipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recipe_category_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;RECIPES_URL&lt;/span&gt;&lt;span class="si"&gt;}#{&lt;/span&gt;&lt;span class="n"&gt;recipe_category_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;
    &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;force_encoding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;result&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="no"&gt;Random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;result&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ここで書いたコードはTwitterから受け取った文章に対して，
楽天レシピAPIをたたいて，JSON形式で結果を返すようにして，&lt;br&gt;
それをリプライにするもの．  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;main.rb&lt;/code&gt; をいじる．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./r-recipe.rb&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="err"&gt;省略&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;
&lt;span class="k"&gt;begin&lt;/span&gt;
  &lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;userstream&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
    &lt;span class="k"&gt;next&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt;/^RT/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_name&lt;/span&gt;
    &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;@&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;

    &lt;span class="c1"&gt;# reply_answer&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt;/@lapis_ko/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_name!&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lapis_ko&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;postmatch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="vg"&gt;$&amp;#39;&lt;/span&gt;

      &lt;span class="c1"&gt;# 料理推薦&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt;/飯/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;RecommendRecipe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt;/:|：/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vg"&gt;$&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
          &lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ご飯にする？&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;なんでもいい&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;食べたいものがあれば「ご飯:食べたいもの」で指定してね！&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="c1"&gt;# 会話&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="n"&gt;postmatch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gsub!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\s|[　]|\?|\？/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# QandA&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postmatch&lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt;/誰|何処|だれ|どこ|何時|いつ|どうやって|どうして|何故|なぜ|どの|何|なに|どれ|は$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;docomoru_create_knowledge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postmatch&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# 会話&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
          &lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;docomoru_create_dialogue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postmatch&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="k"&gt;next&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# メンション以外の名前に反応&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt;/eve|Eve|イヴ|イブ|いぶ/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_name!&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lapis_ko&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;called_name&lt;/span&gt;&lt;span class="o"&gt;=[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;なに?&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;呼んだ?&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;どうしたの?&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;called_name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;next&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;# 料理推薦&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="sr"&gt;/飯|お腹すいた/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_name!&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lapis_ko&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;RecommendRecipe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;
      &lt;span class="n"&gt;eve&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ご飯にする？&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;なんでもいい&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;食べたいものがあれば「ご飯:食べたいもの」で指定してね！&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;next&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="c1"&gt;#zero09がつぶやいたらリプライ&lt;/span&gt;
&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="err"&gt;省略&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これで毎日の献立に困らない．  &lt;/p&gt;
&lt;p&gt;&lt;img alt="ご飯1" src="./img/fifth-2.png"&gt;&lt;/p&gt;
&lt;p&gt;こんなこともできるので余った食材をうまく使えて経済的．  &lt;/p&gt;
&lt;p&gt;&lt;img alt="ご飯2" src="./img/fifth-3.png"&gt;&lt;/p&gt;
&lt;p&gt;最終系は&lt;a href="https://github.com/lapis-zero09/raslas_eve"&gt;こちら&lt;/a&gt;&lt;br&gt;
"癒し"と"help"を実装．(簡単なので割愛)&lt;/p&gt;
&lt;p&gt;これで寂しくない．  &lt;/p&gt;
&lt;h2&gt;参照&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/nzw0301/michil&lt;/li&gt;
&lt;li&gt;http://qiita.com/nwatanabe/items/7b30de9e7402d3589d00&lt;/li&gt;
&lt;/ul&gt;</content><category term="Ruby"></category><category term="Twitter"></category><category term="楽天API"></category><category term="docomoAPI"></category><category term="bot"></category></entry><entry><title>さくらVPSにお名前.comで契約したドメインを関連付けた話</title><link href="https://www.lapis-zero09.xyz/3rd.html" rel="alternate"></link><published>2016-03-03T22:01:00+09:00</published><updated>2016-03-03T22:01:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-03-03:/3rd.html</id><summary type="html">&lt;p&gt;さくらVPSにお名前.comで契約したドメインを関連付けた時のHowto．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;さくらVSP&lt;/h1&gt;
&lt;h2&gt;対象&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Nginxのインストールが終わってる状態．&lt;/li&gt;
&lt;li&gt;お名前.comでドメイン取得済み&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ドメインを関連付ける&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.onamae.com/navi/domain.html"&gt;ドメインNavi&lt;/a&gt;にアクセスしてログイン．  &lt;/p&gt;
&lt;p&gt;"ネームサーバーの設定"項目から"DNS関連機能の設定"をクリック．&lt;br&gt;
&lt;img alt="犬" src="./img/third-1.png"&gt;&lt;/p&gt;
&lt;p&gt;関連付けたいドメインにチェックを入れて，&lt;br&gt;
"次へ進む"をクリック．  &lt;/p&gt;
&lt;p&gt;"DNSレコード設定を利用する"の"設定する"をクリック．  &lt;/p&gt;
&lt;p&gt;"ホスト名"欄に"www"と書く．&lt;br&gt;
"VALUE"欄にIPアドレスを入れる．&lt;br&gt;
その他はいじらずに追加ボタンをクリック．　&lt;/p&gt;
&lt;p&gt;一番下の"DNSレコード設定用ネームサーバー変更確認"欄にチェックを入れて，&lt;br&gt;
"確認画面に進む"をクリック．&lt;/p&gt;
&lt;p&gt;後はなりゆきに任せる．&lt;/p&gt;
&lt;h2&gt;Nginx側の設定&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;nginx.conf&lt;/code&gt; をいじる．&lt;br&gt;
&lt;code&gt;server_name&lt;/code&gt;  の後にドメインを追加する．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
    ~省略~
    server_name  www.&lt;span class="o"&gt;{&lt;/span&gt;契約したドメイン&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    ~省略~
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これで &lt;code&gt;www.{契約したドメイン}&lt;/code&gt; にアクセスしてNginxの初期ページが現れれば成功．&lt;/p&gt;
&lt;p&gt;※&lt;a href="http://www.onamae.com/navi/domain.html"&gt;ドメインNavi&lt;/a&gt;での設定から時間が経ってないと反映されない場合もあるので10分くらい待ってみるのが重要&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.lapis-zero09.xyz/4th.html"&gt;NginxをHTTP/2対応にした話&lt;/a&gt;&lt;/p&gt;</content><category term="さくらVPS"></category><category term="Nginx"></category></entry><entry><title>NginxをHTTP/2対応にした話</title><link href="https://www.lapis-zero09.xyz/4th.html" rel="alternate"></link><published>2016-03-03T22:01:00+09:00</published><updated>2016-03-03T22:01:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-03-03:/4th.html</id><summary type="html">&lt;p&gt;NginxをHTTP/2対応にした時のHowto．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;NginxをHTTP/2対応にした話&lt;/h1&gt;
&lt;h2&gt;環境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://qiita.com/lapis_zero09/items/a77db6bbeb5fa83742a6"&gt;ここ&lt;/a&gt;と&lt;a href="http://qiita.com/lapis_zero09/items/74b6ac261546dfee077e"&gt;ここ&lt;/a&gt;の初期設定が終わってる状態．&lt;/li&gt;
&lt;li&gt;CentOS 6.7&lt;/li&gt;
&lt;li&gt;Nginx 1.9.12&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;現状のnginx.conf&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~省略~
server &lt;span class="o"&gt;{&lt;/span&gt;
  listen &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  server_name www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  location / &lt;span class="o"&gt;{&lt;/span&gt;
    root   /var/www&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;#公開したいドキュメントのルート&lt;/span&gt;
    index  index.html&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
  ~省略~
&lt;span class="o"&gt;}&lt;/span&gt;
~省略~
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;TLSに対応させる&lt;/h2&gt;
&lt;h3&gt;証明書を取得する&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/letsencrypt/letsencrypt"&gt;Let's Encrypt&lt;/a&gt;を使って無料で証明書を取得する．&lt;/p&gt;
&lt;p&gt;ホームディレクトリで&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/
$ git clone https://github.com/letsencrypt/letsencrypt
$ &lt;span class="nb"&gt;cd&lt;/span&gt; letsencrypt
$ ./letsencrypt-auto --help
$ ./letsencrypt-auto certonly --webroot -d www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt; --webroot-path &lt;span class="o"&gt;{&lt;/span&gt;公開したいドキュメントのルートここでは/var/www&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;するとEnter email addressという画面が表示されるので、メールアドレスを入力．
筆者はwhoisで登録されてるアドレスにしました．&lt;/p&gt;
&lt;p&gt;&lt;Agree&gt; を選択．&lt;/p&gt;
&lt;p&gt;うまくいくとこんな感じの表示が出る&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at
   /etc/letsencrypt/live/itochan.jp/fullchain.pem. Your cert
   will expire on &lt;span class="m"&gt;2016&lt;/span&gt;-03-08. To obtain a new version of the
   certificate in the future, simply run Lets Encrypt again.
 - If like Lets Encrypt, please consider supporting our work by:

   Donating to ISRG / Lets Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;証明書取得を自動化する&lt;/h3&gt;
&lt;p&gt;Let's encryptは証明書の期限が３ヶ月と短いので，自動更新する．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ su -
$ crontab -e
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下を記載．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt; &lt;span class="m"&gt;05&lt;/span&gt; &lt;span class="m"&gt;01&lt;/span&gt; * * /usr/local/letsencrypt/letsencrypt-auto certonly --webroot -d www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt; --webroot-path &lt;span class="o"&gt;{&lt;/span&gt;公開したいドキュメントのルートここでは/var/www&lt;span class="o"&gt;}&lt;/span&gt; --renew-by-default &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; nginx -s reload
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;TLSに対応させる&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;nginx.conf&lt;/code&gt; をいじる．
http接続をhttps接続にリダイレクトさせる内容を&lt;br&gt;
&lt;code&gt;listen 80&lt;/code&gt; の &lt;code&gt;server&lt;/code&gt; タグ内に書く．&lt;br&gt;
&lt;code&gt;listen 443&lt;/code&gt; の &lt;code&gt;server&lt;/code&gt; タグのコメントを外してドキュメントルート等書く．&lt;br&gt;
Let's Encryptで取得した証明書は &lt;code&gt;/etc/letsencrypt/live/www.{自分の契約しているドメイン}/&lt;/code&gt; 以下にあるのでそれを参照する旨を書く．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~省略~
server &lt;span class="o"&gt;{&lt;/span&gt;
  listen &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  server_name www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;301&lt;/span&gt; https://www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

server &lt;span class="o"&gt;{&lt;/span&gt;
        listen       &lt;span class="m"&gt;443&lt;/span&gt; ssl&lt;span class="p"&gt;;&lt;/span&gt;
        server_name  www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        ~省略~
        ssl_certificate      /etc/letsencrypt/live/www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;/fullchain.pem&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_certificate_key  /etc/letsencrypt/live/www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;/privkey.pem&lt;span class="p"&gt;;&lt;/span&gt;

        location / &lt;span class="o"&gt;{&lt;/span&gt;
            root   /var/www&lt;span class="p"&gt;;&lt;/span&gt;
            index  index.html&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
~省略~
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;nginx.conf&lt;/code&gt; の文法チェック  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$  sudo nginx -t
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;okが出たらNginxをリロードする．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo nginx -s reload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一応アクセスできるか確認．&lt;br&gt;
できたら&lt;a href="https://www.ssllabs.com/ssltest/index.html"&gt;SSLLab&lt;/a&gt;のテストもやってみる．&lt;br&gt;
(BかCが出る)&lt;/p&gt;
&lt;h3&gt;http2に対応させる&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;nginx.conf&lt;/code&gt; をいじる．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~省略~
server &lt;span class="o"&gt;{&lt;/span&gt;
        listen       &lt;span class="m"&gt;443&lt;/span&gt; ssl http2&lt;span class="p"&gt;;&lt;/span&gt;
        server_name  www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        ~省略~
        ssl_certificate      /etc/letsencrypt/live/www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;/fullchain.pem&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_certificate_key  /etc/letsencrypt/live/www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;/privkey.pem&lt;span class="p"&gt;;&lt;/span&gt;

        ssl_ciphers  ECDHE+AESGCM:DHE+AESGCM:HIGH:!aNULL:!MD5&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_prefer_server_ciphers  on&lt;span class="p"&gt;;&lt;/span&gt;
        location / &lt;span class="o"&gt;{&lt;/span&gt;
            root   /var/www&lt;span class="p"&gt;;&lt;/span&gt;
            index  index.html&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
~省略~
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;文法チェック，リロードの流れをもう一度．  &lt;/p&gt;
&lt;h2&gt;SSLLabでA+をとる&lt;/h2&gt;
&lt;p&gt;HTTP/2がTLSに求める制限&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TLSのバージョンは1.2以上&lt;/li&gt;
&lt;li&gt;プロトコル選択にALPN(RFC7301)を使う&lt;/li&gt;
&lt;li&gt;サーバ認証を共有できる接続は接続共有が可能&lt;/li&gt;
&lt;li&gt;SNI(Server Name Indicator)拡張必須&lt;/li&gt;
&lt;li&gt;SNI(Server Name Indicator)拡張必須&lt;/li&gt;
&lt;li&gt;TLS Compression禁止&lt;/li&gt;
&lt;li&gt;Renegotiation禁止&lt;/li&gt;
&lt;li&gt;鍵長 (DHE 2048bit以上、ECDHE 224bit以上)サポート必須 • PFS必須 (DHE,
ECDHE)&lt;/li&gt;
&lt;li&gt;AEAD(GCM/CCM)以外の暗号方式をブラックリストとして利用禁止&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;そんなことはいいからやり方はよ&lt;/p&gt;
&lt;h3&gt;DHEの鍵長増加&lt;/h3&gt;
&lt;p&gt;2048bitのDHパラメータファイルを生成．&lt;br&gt;
&lt;code&gt;nginx.conf&lt;/code&gt; があるフォルダで以下を実行．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ openssl dhparam -out dhparam.pem &lt;span class="m"&gt;2048&lt;/span&gt;
$ openssl dhparam -text -in dhparam.pem  -noout
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;nginx.conf&lt;/code&gt; のsslサーバの部分にDHパラメータのファイルを加える．&lt;br&gt;
&lt;code&gt;nginx.conf&lt;/code&gt; をいじる．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~省略~
server &lt;span class="o"&gt;{&lt;/span&gt;
        listen       &lt;span class="m"&gt;443&lt;/span&gt; ssl http2&lt;span class="p"&gt;;&lt;/span&gt;
        server_name  www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        ~省略~
        ssl_certificate      /etc/letsencrypt/live/www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;/fullchain.pem&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_certificate_key  /etc/letsencrypt/live/www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;/privkey.pem&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_dhparam          dhparam.pem&lt;span class="p"&gt;;&lt;/span&gt;

        ssl_ciphers  ECDHE+AESGCM:DHE+AESGCM:HIGH:!aNULL:!MD5&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_prefer_server_ciphers  on&lt;span class="p"&gt;;&lt;/span&gt;
        location / &lt;span class="o"&gt;{&lt;/span&gt;
            root   /var/www&lt;span class="p"&gt;;&lt;/span&gt;
            index  index.html&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
~省略~
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;文法チェック，リロードの流れをもう一度．&lt;br&gt;
&lt;a href="https://www.ssllabs.com/ssltest/index.html"&gt;SSLLab&lt;/a&gt;のテストもやってみる．&lt;br&gt;
(AかA-が出る)&lt;/p&gt;
&lt;h3&gt;HSTSヘッダ&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;nginx.conf&lt;/code&gt; のsslサーバの部分にHSTSヘッダを返すように以下の設定を追加．&lt;br&gt;
(max-ageは半年に設定)  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~省略~
server &lt;span class="o"&gt;{&lt;/span&gt;
        listen       &lt;span class="m"&gt;443&lt;/span&gt; ssl http2&lt;span class="p"&gt;;&lt;/span&gt;
        server_name  www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        add_header Strict-Transport-Security &lt;span class="s2"&gt;&amp;quot;max-age=15768000; includeSubdomains&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        ssl_certificate      /etc/letsencrypt/live/www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;/fullchain.pem&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_certificate_key  /etc/letsencrypt/live/www.&lt;span class="o"&gt;{&lt;/span&gt;自分の契約しているドメイン&lt;span class="o"&gt;}&lt;/span&gt;/privkey.pem&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_dhparam          dhparam.pem&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_session_cache    shared:SSL:1m&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_session_timeout  5m&lt;span class="p"&gt;;&lt;/span&gt;

        ssl_ciphers  ECDHE+AESGCM:DHE+AESGCM:HIGH:!aNULL:!MD5&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_prefer_server_ciphers  on&lt;span class="p"&gt;;&lt;/span&gt;
        location / &lt;span class="o"&gt;{&lt;/span&gt;
            root   /var/www&lt;span class="p"&gt;;&lt;/span&gt;
            index  index.html&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
~省略~
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;文法チェック，リロードの流れをもう一度．&lt;br&gt;
&lt;a href="https://www.ssllabs.com/ssltest/index.html"&gt;SSLLab&lt;/a&gt;のテストもやってみる．&lt;br&gt;
(A+が出る(2016-03-03))&lt;/p&gt;</content><category term="さくらVPS"></category><category term="Nginx"></category><category term="http2"></category><category term="tls"></category><category term="Let'sEncrypt"></category></entry><entry><title>さくらVPSにNginx1.9系をインストールした話</title><link href="https://www.lapis-zero09.xyz/2nd.html" rel="alternate"></link><published>2016-03-03T22:00:00+09:00</published><updated>2016-03-03T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-03-03:/2nd.html</id><summary type="html">&lt;p&gt;さくらVPSに最新のNginxをインストールした時のHowto．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;さくらVSP&lt;/h1&gt;
&lt;h2&gt;さくらVPSの状態&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://qiita.com/lapis_zero09/items/a77db6bbeb5fa83742a6"&gt;ここ&lt;/a&gt;か&lt;a href="https://www.lapis-zero09.xyz/1st.html"&gt;ここ&lt;/a&gt;の初期設定が終わってる状態．&lt;/li&gt;
&lt;li&gt;OSは標準のCentOS 6.7&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さくらVPSにインストールされているOSを確認するコマンドは  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/redhat-release
CentOS release &lt;span class="m"&gt;6&lt;/span&gt;.7 &lt;span class="o"&gt;(&lt;/span&gt;Final&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Nginxのビルド&lt;/h2&gt;
&lt;p&gt;(ここは読み飛ばしても大丈夫)&lt;br&gt;
早速，Nginxをビルドしていく．&lt;br&gt;
以下はさくらVPSにSSH接続している前提．&lt;br&gt;
yumでできるかなと思って&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ yum info nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;してみるもVersion古すぎてうっそだろお前状態．&lt;br&gt;
そこで以下のコマンドでリポジトリを追加．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これでokかなと思いきや．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum -y install nginx
$ nginx -v
nginx version: nginx/1.8.1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;インストールされたのはNginx1.8系，&lt;br&gt;
欲しいのは1.9系なのでダメ．&lt;br&gt;
(1.8系でもいい人はok)  &lt;/p&gt;
&lt;h2&gt;Nginxをソースからビルド・インストール&lt;/h2&gt;
&lt;p&gt;先ほどの章で&lt;code&gt;yum -y install nginx&lt;/code&gt;した人は，
&lt;code&gt;yum remove nginx&lt;/code&gt;する  &lt;/p&gt;
&lt;p&gt;まず，なんでもいいので作業用ディレクトリを作っておく．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir ~/hoge
$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/hoge
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;ソースのダウンロード&lt;/h3&gt;
&lt;p&gt;作ったディレクトリの中に必要な最新版のソースをダウンロードしてくる．
必要なソースのホームページはこちら&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nginx-1.9系 http://nginx.org/en/download.html&lt;/li&gt;
&lt;li&gt;openssl-1.0.2系 https://www.openssl.org/source/&lt;/li&gt;
&lt;li&gt;pcre-8.3系 http://ftp.csx.cam.ac.uk/pub/software/programming/pcre/&lt;/li&gt;
&lt;li&gt;zlib-1.2系 http://zlib.net/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;現時点(2016-03-03)での最新は以下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nginx-1.9.12&lt;/li&gt;
&lt;li&gt;openssl-1.0.2g&lt;/li&gt;
&lt;li&gt;pcre-8.38&lt;/li&gt;
&lt;li&gt;zlib-1.2.8
(筆者はwgetだけど他の方法でもok)  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wget http://nginx.org/download/nginx-1.9.12.tar.gz
$ wget https://www.openssl.org/source/openssl-1.0.2g.tar.gz
$ wget http://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz
$ wget http://zlib.net/zlib-1.2.8.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;※なんかうめこまれてたら怖いのでちゃんとMD5，SHASUM等，ハッシュ値を照合する．&lt;/p&gt;
&lt;h3&gt;ソースの展開&lt;/h3&gt;
&lt;p&gt;照合できたら展開．&lt;br&gt;
以下の4コマンドをやってもいいけど，  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ tar zxvf nginx-1.9.12.tar.gz
$ tar zxvf openssl-1.0.2g.tar.gz
$ tar zxvf pcre-8.38.tar.gz
$ tar zxvf zlib-1.2.8.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;シェルに頼って以下で一気にやったほうが効率的．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ find ./ -type f -name &lt;span class="s2"&gt;&amp;quot;*.tar.gz&amp;quot;&lt;/span&gt; -exec tar zxf &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;一応，確認しとく．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ls
nginx-1.9.12         openssl-1.0.2g.tar.gz
nginx-1.9.12.tar.gz  pcre-8.38              zlib-1.2.8.tar.gz    zlib-1.2.8
openssl-1.0.2g       pcre-8.38.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok．&lt;/p&gt;
&lt;h3&gt;ソースのビルド・インストール&lt;/h3&gt;
&lt;p&gt;確認できたのでNginxのソース中でビルド・インストールする．&lt;br&gt;
インストールパスは /usr/local/nginx 以下．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; nginx-1.9.12
$ ./configure --with-openssl&lt;span class="o"&gt;=&lt;/span&gt;../openssl-1.0.2g/ --with-http_ssl_module --with-pcre&lt;span class="o"&gt;=&lt;/span&gt;../pcre-8.38 --with-zlib&lt;span class="o"&gt;=&lt;/span&gt;../zlib-1.2.8  --with-http_v2_module --with-debug
$ make
$ sudo make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;エラーが出たら &lt;code&gt;configure&lt;/code&gt; の引数のそれぞれの名前が一致しているかとか確かめる．  &lt;/p&gt;
&lt;p&gt;これで一応終了．  &lt;/p&gt;
&lt;p&gt;確認する．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo /usr/local/nginx/sbin/nginx -v
nginx version: nginx/1.9.12
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok．  &lt;/p&gt;
&lt;p&gt;起動して確認してみる．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo /usr/local/nginx/sbin/nginx
$ tail /usr/local/nginx/logs/error.log
&lt;span class="m"&gt;2016&lt;/span&gt;/03/02 &lt;span class="m"&gt;17&lt;/span&gt;:18:03 &lt;span class="o"&gt;[&lt;/span&gt;notice&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;3008&lt;/span&gt;&lt;span class="c1"&gt;#0: signal process started&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok．
もろもろの設定は
&lt;code&gt;/usr/local/nginx/conf/nginx.conf&lt;/code&gt; をいじる．&lt;br&gt;
自分のPCのブラウザから契約しているさくらVPSのIPアドレスにアクセス(URL欄にIPアドレスを入れる)してNginxの初期ページが見れたら成功．  &lt;/p&gt;
&lt;h2&gt;Nginxのパスを通す&lt;/h2&gt;
&lt;p&gt;無事インストールできたけど，
起動したり止めたりリロードする際に
いちいち &lt;code&gt;sudo /usr/local/nginx/sbin/nginx&lt;/code&gt;
って打つのはcoolじゃないのでパスを通しておく．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vim ~/.bash_profile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下を記載．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/nginx/sbin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;書けたら &lt;code&gt;bash_profile&lt;/code&gt; のリロード&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;source&lt;/span&gt; ~/.bash_profile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これで出来るはず．&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nginx&lt;/code&gt; コマンドは動くようになったけど，&lt;br&gt;
&lt;code&gt;sudo&lt;/code&gt; 実行したらコマンドが見つかりませんって怒られた人は，
&lt;code&gt;visudo&lt;/code&gt; を以下のようにいじる．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo nginx -v
sudo: nginx: コマンドが見つかりません
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo visudo
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Defaults   env_keep += &amp;quot;HOME&amp;quot;&lt;/span&gt;
Defaults    &lt;span class="nv"&gt;secure_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /sbin:/bin:/usr/sbin:/usr/bin
↓
Defaults   &lt;span class="nv"&gt;env_keep&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;HOME&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これで &lt;code&gt;sudo nginx&lt;/code&gt; やりたい放題．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo nginx -v
nginx version: nginx/1.9.12
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Nginxを自動起動するようにする&lt;/h2&gt;
&lt;p&gt;ソースビルド・インストールしたNginxはそのままだと &lt;code&gt;service&lt;/code&gt; や &lt;code&gt;chkconfig&lt;/code&gt; できないので出来るようにする．&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/init.d&lt;/code&gt; 以下に起動スクリプトを作成しデーモン化，
自動起動を可能にする．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vim /etc/init.d/nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下を記載．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c1"&gt;#chkconfig: 2345 80 30&lt;/span&gt;
&lt;span class="c1"&gt;#description: nginx&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt; -e
&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/sbin:/usr/local/bin:/sbin:/bin/:/usr/sbin:/usr/bin
&lt;span class="nv"&gt;DESC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nginx deamon&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nginx
&lt;span class="nv"&gt;DAEMON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/nginx/sbin/&lt;span class="nv"&gt;$NAME&lt;/span&gt;
&lt;span class="nv"&gt;SCRIPTNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/init.d/&lt;span class="nv"&gt;$NAME&lt;/span&gt;

&lt;span class="nb"&gt;test&lt;/span&gt; -x &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;

d_start&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot; already running&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

d_stop&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s stop &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot; not running&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

d_reload&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -s reload &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot; could not reload&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in
        start&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Starting &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;$NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
                d_start
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
        stop&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Stopping &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;$NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
                d_stop
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
        reload&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Reloading &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt; configuration...&amp;quot;&lt;/span&gt;
                d_reload
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;reloaded.&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
        restart&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Restarting &lt;/span&gt;&lt;span class="nv"&gt;$DESC&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="nv"&gt;$NAME&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
                d_stop
                sleep &lt;span class="m"&gt;2&lt;/span&gt;
                d_start
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
        *&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$SCRIPTNAME&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|restart|reload}&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
                &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;

&lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;できたらパーミッションを変更．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo chmod +x /etc/init.d/nginx
$ ls -l /etc/init.d/nginx
-rwxr-xr-x &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;872&lt;/span&gt;  3月  &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;:55 &lt;span class="m"&gt;2016&lt;/span&gt; /etc/init.d/nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok．&lt;br&gt;
&lt;code&gt;chkconfig&lt;/code&gt; に &lt;code&gt;nginx&lt;/code&gt; を追加.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo chkconfig --add nginx
$ chkconfig --list nginx
nginx           &lt;span class="m"&gt;0&lt;/span&gt;:off   &lt;span class="m"&gt;1&lt;/span&gt;:off   &lt;span class="m"&gt;2&lt;/span&gt;:on    &lt;span class="m"&gt;3&lt;/span&gt;:on    &lt;span class="m"&gt;4&lt;/span&gt;:on    &lt;span class="m"&gt;5&lt;/span&gt;:on    &lt;span class="m"&gt;6&lt;/span&gt;:off
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これで自動起動するようになった．&lt;/p&gt;
&lt;p&gt;後は &lt;code&gt;/usr/local/nginx/conf/nginx.conf&lt;/code&gt; を好きなようにいじる．&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.lapis-zero09.xyz/3rd.html"&gt;さくらVPSにお名前.comで契約したドメインを関連付けた話&lt;/a&gt;
&lt;a href="https://www.lapis-zero09.xyz/4th.html"&gt;NginxをHTTP/2対応にした話&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;追記：公式あるっぽい http://nginx.org/packages/mainline/centos/6/x86_64/RPMS/&lt;/p&gt;</content><category term="さくらVPS"></category><category term="Nginx"></category></entry><entry><title>さくらVPSを契約した話</title><link href="https://www.lapis-zero09.xyz/1st.html" rel="alternate"></link><published>2016-03-02T22:00:00+09:00</published><updated>2016-03-02T22:00:00+09:00</updated><author><name>lapis_zero09</name></author><id>tag:www.lapis-zero09.xyz,2016-03-02:/1st.html</id><summary type="html">&lt;p&gt;さくらVPSを契約した時のHowto．&lt;/p&gt;</summary><content type="html">&lt;h1&gt;さくらVSP&lt;/h1&gt;
&lt;p&gt;さくらVPSの&lt;a href="http://vps.sakura.ad.jp/specification/"&gt;512プラン&lt;/a&gt;を契約した．&lt;br&gt;
月額635円でとてもやすい．&lt;br&gt;
クレジットカードで登録すると2週間無料お試しができる．&lt;br&gt;
(初期費用で約2000円位持ってかれる．)  &lt;/p&gt;
&lt;h2&gt;初期設定&lt;/h2&gt;
&lt;p&gt;コントロールパネルで契約したサーバを起動した後，自分のPCのterminalでSSH接続．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh root@&lt;span class="o"&gt;{&lt;/span&gt;サーバのIPアドレス&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;yum update をする  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ yum update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;すると，いきなりエラーを吐かれるので&lt;br&gt;
clean up してから update　する  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ yum clean up
$ yum update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;うまくいきました．&lt;br&gt;
時間がかかったので screen の中で回したほうがいいかも  &lt;/p&gt;
&lt;h2&gt;日本語化&lt;/h2&gt;
&lt;p&gt;一応，日本語化しておく．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim /etc/sysconfig/i18n
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ja_JP.UTF-8&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;SYSFONT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;latarcyrheb-sun16&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;作業用ユーザの登録&lt;/h2&gt;
&lt;p&gt;作業用ユーザの登録をする．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ useradd &lt;span class="o"&gt;{&lt;/span&gt;新しいユーザの名前&lt;span class="o"&gt;}&lt;/span&gt;
$ passwd &lt;span class="o"&gt;{&lt;/span&gt;useraddしたユーザの名前&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;作業用ユーザに sudo 権限を与える．&lt;br&gt;
(userをwheelグループに入れるように変更)  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ usermod -G wheel &lt;span class="o"&gt;{&lt;/span&gt;useraddしたユーザの名前&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;wheelグループがsudoコマンドを使えるようにする．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ visudo
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;%wheel  ALL=(ALL)  ALLの行を以下のように変更  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;# %wheel       ALL=(ALL)      ALL&lt;/span&gt;
&lt;span class="err"&gt;↓&lt;/span&gt;
&lt;span class="nf"&gt;%wheel&lt;/span&gt;       &lt;span class="n"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ALL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      &lt;span class="n"&gt;ALL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;鍵認証&lt;/h2&gt;
&lt;h3&gt;さくら側&lt;/h3&gt;
&lt;p&gt;.sshフォルダを作っておく  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir ~/.ssh
$ chmod &lt;span class="m"&gt;700&lt;/span&gt; ~/.ssh
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;自分のPC側&lt;/h3&gt;
&lt;p&gt;自分のPCで鍵作成．&lt;br&gt;
(パスフレーズなど聞かれるのでデフォルトのままでok)
筆者はSSH先ごとに鍵を変えてるので名前を変えた．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh-keygen -t rsa
Enter file in which to save the key : id_rsa.sakura
Enter passphrase :
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ちゃんとできてるか確認．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ls -a ~/.ssh
id_rsa.sakura   id_rsa.sakura.pub
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;できてる．&lt;br&gt;
パーミッションを変えておく．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ chmod &lt;span class="m"&gt;600&lt;/span&gt; id_rsa.sakura.pub
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;SSH接続の時にいちいちIPアドレスを書くのが面倒どうなので&lt;br&gt;
configに登録しておく．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/.ssh
$ vim config
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Host sakura
  HostName &lt;span class="o"&gt;{&lt;/span&gt;さくらのIPアドレス&lt;span class="o"&gt;}&lt;/span&gt;
  User &lt;span class="o"&gt;{&lt;/span&gt;useraddしたユーザの名前&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これで  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh sakura
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でつなげるようになる．  &lt;/p&gt;
&lt;p&gt;pubの方をさくらVPSに転送．&lt;br&gt;
転送時にauthorized_keysに名前変更．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ scp ~/.ssh/id_rsa.sakura.pub sakura:~/.ssh/authorized_keys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;さくら側で確認．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ls -a ~/.ssh
authorized_keys
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ok．  &lt;/p&gt;
&lt;p&gt;configに鍵を登録しておく．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim ~/.ssh/config
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Host sakura
  HostName &lt;span class="o"&gt;{&lt;/span&gt;さくらのIPアドレス&lt;span class="o"&gt;}&lt;/span&gt;
  User &lt;span class="o"&gt;{&lt;/span&gt;useraddしたユーザの名前&lt;span class="o"&gt;}&lt;/span&gt;
  IdentityFile ~/.ssh/id_rsa.sakura
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;SSH設定&lt;/h2&gt;
&lt;p&gt;セキュリティを高めるために以下を実行．&lt;br&gt;
- ポート番号の変更
  - デフォルトの22から任意の番号に変更
  - 指定できる範囲は1024~65535
- パスワードログインの禁止
- rootログインの禁止&lt;/p&gt;
&lt;h3&gt;さくら側&lt;/h3&gt;
&lt;p&gt;rootにスイッチ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo -s
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;SSH設定をいじっていく．&lt;br&gt;
SSHの設定は /etc/ssh/ssh_config
先にバックアップをとる．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cp /etc/ssh/ssh_config /etc/ssh/ssh_config.org
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim /etc/ssh/ssh_config
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下の3つを変更．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Port 22&lt;/span&gt;
↓
Port &lt;span class="o"&gt;{&lt;/span&gt;任意の番号&lt;span class="o"&gt;}&lt;/span&gt;

PasswordAuthentication yes
↓
PasswordAuthentication no

&lt;span class="c1"&gt;#PermitRootLogin yes&lt;/span&gt;
↓
PermitRootLogin no
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;変更を反映させる．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ service sshd restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;自分のPC&lt;/h3&gt;
&lt;p&gt;configにportを登録する．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim ~/.ssh/config
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Host sakura
  HostName &lt;span class="o"&gt;{&lt;/span&gt;さくらのIPアドレス&lt;span class="o"&gt;}&lt;/span&gt;
  User &lt;span class="o"&gt;{&lt;/span&gt;useraddしたユーザの名前&lt;span class="o"&gt;}&lt;/span&gt;
  Port &lt;span class="o"&gt;{&lt;/span&gt;/etc/ssh/ssh_config.orgのPortで指定した番号&lt;span class="o"&gt;}&lt;/span&gt;
  IdentityFile ~/.ssh/id_rsa.sakura
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接続できたらok．  &lt;/p&gt;
&lt;h2&gt;FireWall(iptables)の設定&lt;/h2&gt;
&lt;p&gt;/etc/sysconfig/iptablesをいじる．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim /etc/sysconfig/iptables
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下をコピペでも可．  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;*filter
:INPUT     DROP    &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:0&lt;span class="o"&gt;]&lt;/span&gt;
:FORWARD   DROP    &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:0&lt;span class="o"&gt;]&lt;/span&gt;
:OUTPUT    ACCEPT  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:0&lt;span class="o"&gt;]&lt;/span&gt;
:SERVICES  -       &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:0&lt;span class="o"&gt;]&lt;/span&gt;
-A INPUT -i lo -j ACCEPT
-A INPUT -p icmp --icmp-type echo-request -m limit &lt;span class="m"&gt;1&lt;/span&gt;/s --limit-burst4 -j ACCEPT
-A INPUT -p tcp -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p tcp -m state --state NEW -j SERVICES
-A INPUT -p udp --sport &lt;span class="m"&gt;53&lt;/span&gt; -j ACCEPT
-A INPUT -p udp --sport &lt;span class="m"&gt;123&lt;/span&gt; --dport &lt;span class="m"&gt;123&lt;/span&gt; -j ACCEPT
-A SERVICES -p tcp --dport &lt;span class="o"&gt;{&lt;/span&gt;/etc/ssh/ssh_config.orgのPortで指定した番号&lt;span class="o"&gt;}&lt;/span&gt; -j ACCEPT
-A SERVICES -p tcp --dport &lt;span class="m"&gt;80&lt;/span&gt; -j ACCEPT
-A SERVICES -p tcp --dport &lt;span class="m"&gt;443&lt;/span&gt; -j ACCEPT
COMMIT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;筆者はこんな感じ．  &lt;/p&gt;
&lt;p&gt;設定を反映させる．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ service iptables start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;okが出たらok．  &lt;/p&gt;
&lt;p&gt;設定を確認するためのコマンド&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ iptables -L
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://www.lapis-zero09.xyz/2nd.html"&gt;Nginxをインストールした話&lt;/a&gt;&lt;/p&gt;</content><category term="さくらVPS"></category><category term="ssh"></category><category term="yum"></category></entry></feed>